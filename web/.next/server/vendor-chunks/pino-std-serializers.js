"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/pino-std-serializers";
exports.ids = ["vendor-chunks/pino-std-serializers"];
exports.modules = {

/***/ "(ssr)/../node_modules/pino-std-serializers/index.js":
/*!*****************************************************!*\
  !*** ../node_modules/pino-std-serializers/index.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst errSerializer = __webpack_require__(/*! ./lib/err */ \"(ssr)/../node_modules/pino-std-serializers/lib/err.js\");\nconst reqSerializers = __webpack_require__(/*! ./lib/req */ \"(ssr)/../node_modules/pino-std-serializers/lib/req.js\");\nconst resSerializers = __webpack_require__(/*! ./lib/res */ \"(ssr)/../node_modules/pino-std-serializers/lib/res.js\");\nmodule.exports = {\n    err: errSerializer,\n    mapHttpRequest: reqSerializers.mapHttpRequest,\n    mapHttpResponse: resSerializers.mapHttpResponse,\n    req: reqSerializers.reqSerializer,\n    res: resSerializers.resSerializer,\n    wrapErrorSerializer: function wrapErrorSerializer(customSerializer) {\n        if (customSerializer === errSerializer) return customSerializer;\n        return function wrapErrSerializer(err) {\n            return customSerializer(errSerializer(err));\n        };\n    },\n    wrapRequestSerializer: function wrapRequestSerializer(customSerializer) {\n        if (customSerializer === reqSerializers.reqSerializer) return customSerializer;\n        return function wrappedReqSerializer(req) {\n            return customSerializer(reqSerializers.reqSerializer(req));\n        };\n    },\n    wrapResponseSerializer: function wrapResponseSerializer(customSerializer) {\n        if (customSerializer === resSerializers.resSerializer) return customSerializer;\n        return function wrappedResSerializer(res) {\n            return customSerializer(resSerializers.resSerializer(res));\n        };\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL3Bpbm8tc3RkLXNlcmlhbGl6ZXJzL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUEsTUFBTUEsZ0JBQWdCQyxtQkFBT0EsQ0FBQztBQUM5QixNQUFNQyxpQkFBaUJELG1CQUFPQSxDQUFDO0FBQy9CLE1BQU1FLGlCQUFpQkYsbUJBQU9BLENBQUM7QUFFL0JHLE9BQU9DLE9BQU8sR0FBRztJQUNmQyxLQUFLTjtJQUNMTyxnQkFBZ0JMLGVBQWVLLGNBQWM7SUFDN0NDLGlCQUFpQkwsZUFBZUssZUFBZTtJQUMvQ0MsS0FBS1AsZUFBZVEsYUFBYTtJQUNqQ0MsS0FBS1IsZUFBZVMsYUFBYTtJQUVqQ0MscUJBQXFCLFNBQVNBLG9CQUFxQkMsZ0JBQWdCO1FBQ2pFLElBQUlBLHFCQUFxQmQsZUFBZSxPQUFPYztRQUMvQyxPQUFPLFNBQVNDLGtCQUFtQlQsR0FBRztZQUNwQyxPQUFPUSxpQkFBaUJkLGNBQWNNO1FBQ3hDO0lBQ0Y7SUFFQVUsdUJBQXVCLFNBQVNBLHNCQUF1QkYsZ0JBQWdCO1FBQ3JFLElBQUlBLHFCQUFxQlosZUFBZVEsYUFBYSxFQUFFLE9BQU9JO1FBQzlELE9BQU8sU0FBU0cscUJBQXNCUixHQUFHO1lBQ3ZDLE9BQU9LLGlCQUFpQlosZUFBZVEsYUFBYSxDQUFDRDtRQUN2RDtJQUNGO0lBRUFTLHdCQUF3QixTQUFTQSx1QkFBd0JKLGdCQUFnQjtRQUN2RSxJQUFJQSxxQkFBcUJYLGVBQWVTLGFBQWEsRUFBRSxPQUFPRTtRQUM5RCxPQUFPLFNBQVNLLHFCQUFzQlIsR0FBRztZQUN2QyxPQUFPRyxpQkFBaUJYLGVBQWVTLGFBQWEsQ0FBQ0Q7UUFDdkQ7SUFDRjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9waW5vLXN0ZC1zZXJpYWxpemVycy9pbmRleC5qcz83MzIwIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5jb25zdCBlcnJTZXJpYWxpemVyID0gcmVxdWlyZSgnLi9saWIvZXJyJylcbmNvbnN0IHJlcVNlcmlhbGl6ZXJzID0gcmVxdWlyZSgnLi9saWIvcmVxJylcbmNvbnN0IHJlc1NlcmlhbGl6ZXJzID0gcmVxdWlyZSgnLi9saWIvcmVzJylcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGVycjogZXJyU2VyaWFsaXplcixcbiAgbWFwSHR0cFJlcXVlc3Q6IHJlcVNlcmlhbGl6ZXJzLm1hcEh0dHBSZXF1ZXN0LFxuICBtYXBIdHRwUmVzcG9uc2U6IHJlc1NlcmlhbGl6ZXJzLm1hcEh0dHBSZXNwb25zZSxcbiAgcmVxOiByZXFTZXJpYWxpemVycy5yZXFTZXJpYWxpemVyLFxuICByZXM6IHJlc1NlcmlhbGl6ZXJzLnJlc1NlcmlhbGl6ZXIsXG5cbiAgd3JhcEVycm9yU2VyaWFsaXplcjogZnVuY3Rpb24gd3JhcEVycm9yU2VyaWFsaXplciAoY3VzdG9tU2VyaWFsaXplcikge1xuICAgIGlmIChjdXN0b21TZXJpYWxpemVyID09PSBlcnJTZXJpYWxpemVyKSByZXR1cm4gY3VzdG9tU2VyaWFsaXplclxuICAgIHJldHVybiBmdW5jdGlvbiB3cmFwRXJyU2VyaWFsaXplciAoZXJyKSB7XG4gICAgICByZXR1cm4gY3VzdG9tU2VyaWFsaXplcihlcnJTZXJpYWxpemVyKGVycikpXG4gICAgfVxuICB9LFxuXG4gIHdyYXBSZXF1ZXN0U2VyaWFsaXplcjogZnVuY3Rpb24gd3JhcFJlcXVlc3RTZXJpYWxpemVyIChjdXN0b21TZXJpYWxpemVyKSB7XG4gICAgaWYgKGN1c3RvbVNlcmlhbGl6ZXIgPT09IHJlcVNlcmlhbGl6ZXJzLnJlcVNlcmlhbGl6ZXIpIHJldHVybiBjdXN0b21TZXJpYWxpemVyXG4gICAgcmV0dXJuIGZ1bmN0aW9uIHdyYXBwZWRSZXFTZXJpYWxpemVyIChyZXEpIHtcbiAgICAgIHJldHVybiBjdXN0b21TZXJpYWxpemVyKHJlcVNlcmlhbGl6ZXJzLnJlcVNlcmlhbGl6ZXIocmVxKSlcbiAgICB9XG4gIH0sXG5cbiAgd3JhcFJlc3BvbnNlU2VyaWFsaXplcjogZnVuY3Rpb24gd3JhcFJlc3BvbnNlU2VyaWFsaXplciAoY3VzdG9tU2VyaWFsaXplcikge1xuICAgIGlmIChjdXN0b21TZXJpYWxpemVyID09PSByZXNTZXJpYWxpemVycy5yZXNTZXJpYWxpemVyKSByZXR1cm4gY3VzdG9tU2VyaWFsaXplclxuICAgIHJldHVybiBmdW5jdGlvbiB3cmFwcGVkUmVzU2VyaWFsaXplciAocmVzKSB7XG4gICAgICByZXR1cm4gY3VzdG9tU2VyaWFsaXplcihyZXNTZXJpYWxpemVycy5yZXNTZXJpYWxpemVyKHJlcykpXG4gICAgfVxuICB9XG59XG4iXSwibmFtZXMiOlsiZXJyU2VyaWFsaXplciIsInJlcXVpcmUiLCJyZXFTZXJpYWxpemVycyIsInJlc1NlcmlhbGl6ZXJzIiwibW9kdWxlIiwiZXhwb3J0cyIsImVyciIsIm1hcEh0dHBSZXF1ZXN0IiwibWFwSHR0cFJlc3BvbnNlIiwicmVxIiwicmVxU2VyaWFsaXplciIsInJlcyIsInJlc1NlcmlhbGl6ZXIiLCJ3cmFwRXJyb3JTZXJpYWxpemVyIiwiY3VzdG9tU2VyaWFsaXplciIsIndyYXBFcnJTZXJpYWxpemVyIiwid3JhcFJlcXVlc3RTZXJpYWxpemVyIiwid3JhcHBlZFJlcVNlcmlhbGl6ZXIiLCJ3cmFwUmVzcG9uc2VTZXJpYWxpemVyIiwid3JhcHBlZFJlc1NlcmlhbGl6ZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/pino-std-serializers/index.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/pino-std-serializers/lib/err.js":
/*!*******************************************************!*\
  !*** ../node_modules/pino-std-serializers/lib/err.js ***!
  \*******************************************************/
/***/ ((module) => {

eval("\nmodule.exports = errSerializer;\nconst { toString } = Object.prototype;\nconst seen = Symbol(\"circular-ref-tag\");\nconst rawSymbol = Symbol(\"pino-raw-err-ref\");\nconst pinoErrProto = Object.create({}, {\n    type: {\n        enumerable: true,\n        writable: true,\n        value: undefined\n    },\n    message: {\n        enumerable: true,\n        writable: true,\n        value: undefined\n    },\n    stack: {\n        enumerable: true,\n        writable: true,\n        value: undefined\n    },\n    raw: {\n        enumerable: false,\n        get: function() {\n            return this[rawSymbol];\n        },\n        set: function(val) {\n            this[rawSymbol] = val;\n        }\n    }\n});\nObject.defineProperty(pinoErrProto, rawSymbol, {\n    writable: true,\n    value: {}\n});\nfunction errSerializer(err) {\n    if (!(err instanceof Error)) {\n        return err;\n    }\n    err[seen] = undefined // tag to prevent re-looking at this\n    ;\n    const _err = Object.create(pinoErrProto);\n    _err.type = toString.call(err.constructor) === \"[object Function]\" ? err.constructor.name : err.name;\n    _err.message = err.message;\n    _err.stack = err.stack;\n    for(const key in err){\n        if (_err[key] === undefined) {\n            const val = err[key];\n            if (val instanceof Error) {\n                /* eslint-disable no-prototype-builtins */ if (!val.hasOwnProperty(seen)) {\n                    _err[key] = errSerializer(val);\n                }\n            } else {\n                _err[key] = val;\n            }\n        }\n    }\n    delete err[seen] // clean up tag in case err is serialized again later\n    ;\n    _err.raw = err;\n    return _err;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL3Bpbm8tc3RkLXNlcmlhbGl6ZXJzL2xpYi9lcnIuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQUEsT0FBT0MsT0FBTyxHQUFHQztBQUVqQixNQUFNLEVBQUVDLFFBQVEsRUFBRSxHQUFHQyxPQUFPQyxTQUFTO0FBQ3JDLE1BQU1DLE9BQU9DLE9BQU87QUFDcEIsTUFBTUMsWUFBWUQsT0FBTztBQUN6QixNQUFNRSxlQUFlTCxPQUFPTSxNQUFNLENBQUMsQ0FBQyxHQUFHO0lBQ3JDQyxNQUFNO1FBQ0pDLFlBQVk7UUFDWkMsVUFBVTtRQUNWQyxPQUFPQztJQUNUO0lBQ0FDLFNBQVM7UUFDUEosWUFBWTtRQUNaQyxVQUFVO1FBQ1ZDLE9BQU9DO0lBQ1Q7SUFDQUUsT0FBTztRQUNMTCxZQUFZO1FBQ1pDLFVBQVU7UUFDVkMsT0FBT0M7SUFDVDtJQUNBRyxLQUFLO1FBQ0hOLFlBQVk7UUFDWk8sS0FBSztZQUNILE9BQU8sSUFBSSxDQUFDWCxVQUFVO1FBQ3hCO1FBQ0FZLEtBQUssU0FBVUMsR0FBRztZQUNoQixJQUFJLENBQUNiLFVBQVUsR0FBR2E7UUFDcEI7SUFDRjtBQUNGO0FBQ0FqQixPQUFPa0IsY0FBYyxDQUFDYixjQUFjRCxXQUFXO0lBQzdDSyxVQUFVO0lBQ1ZDLE9BQU8sQ0FBQztBQUNWO0FBRUEsU0FBU1osY0FBZXFCLEdBQUc7SUFDekIsSUFBSSxDQUFFQSxDQUFBQSxlQUFlQyxLQUFJLEdBQUk7UUFDM0IsT0FBT0Q7SUFDVDtJQUVBQSxHQUFHLENBQUNqQixLQUFLLEdBQUdTLFVBQVUsb0NBQW9DOztJQUMxRCxNQUFNVSxPQUFPckIsT0FBT00sTUFBTSxDQUFDRDtJQUMzQmdCLEtBQUtkLElBQUksR0FBR1IsU0FBU3VCLElBQUksQ0FBQ0gsSUFBSUksV0FBVyxNQUFNLHNCQUMzQ0osSUFBSUksV0FBVyxDQUFDQyxJQUFJLEdBQ3BCTCxJQUFJSyxJQUFJO0lBQ1pILEtBQUtULE9BQU8sR0FBR08sSUFBSVAsT0FBTztJQUMxQlMsS0FBS1IsS0FBSyxHQUFHTSxJQUFJTixLQUFLO0lBQ3RCLElBQUssTUFBTVksT0FBT04sSUFBSztRQUNyQixJQUFJRSxJQUFJLENBQUNJLElBQUksS0FBS2QsV0FBVztZQUMzQixNQUFNTSxNQUFNRSxHQUFHLENBQUNNLElBQUk7WUFDcEIsSUFBSVIsZUFBZUcsT0FBTztnQkFDeEIsd0NBQXdDLEdBQ3hDLElBQUksQ0FBQ0gsSUFBSVMsY0FBYyxDQUFDeEIsT0FBTztvQkFDN0JtQixJQUFJLENBQUNJLElBQUksR0FBRzNCLGNBQWNtQjtnQkFDNUI7WUFDRixPQUFPO2dCQUNMSSxJQUFJLENBQUNJLElBQUksR0FBR1I7WUFDZDtRQUNGO0lBQ0Y7SUFFQSxPQUFPRSxHQUFHLENBQUNqQixLQUFLLENBQUMscURBQXFEOztJQUN0RW1CLEtBQUtQLEdBQUcsR0FBR0s7SUFDWCxPQUFPRTtBQUNUIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9waW5vLXN0ZC1zZXJpYWxpemVycy9saWIvZXJyLmpzPzExYTciXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbm1vZHVsZS5leHBvcnRzID0gZXJyU2VyaWFsaXplclxuXG5jb25zdCB7IHRvU3RyaW5nIH0gPSBPYmplY3QucHJvdG90eXBlXG5jb25zdCBzZWVuID0gU3ltYm9sKCdjaXJjdWxhci1yZWYtdGFnJylcbmNvbnN0IHJhd1N5bWJvbCA9IFN5bWJvbCgncGluby1yYXctZXJyLXJlZicpXG5jb25zdCBwaW5vRXJyUHJvdG8gPSBPYmplY3QuY3JlYXRlKHt9LCB7XG4gIHR5cGU6IHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgIHZhbHVlOiB1bmRlZmluZWRcbiAgfSxcbiAgbWVzc2FnZToge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgd3JpdGFibGU6IHRydWUsXG4gICAgdmFsdWU6IHVuZGVmaW5lZFxuICB9LFxuICBzdGFjazoge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgd3JpdGFibGU6IHRydWUsXG4gICAgdmFsdWU6IHVuZGVmaW5lZFxuICB9LFxuICByYXc6IHtcbiAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiB0aGlzW3Jhd1N5bWJvbF1cbiAgICB9LFxuICAgIHNldDogZnVuY3Rpb24gKHZhbCkge1xuICAgICAgdGhpc1tyYXdTeW1ib2xdID0gdmFsXG4gICAgfVxuICB9XG59KVxuT2JqZWN0LmRlZmluZVByb3BlcnR5KHBpbm9FcnJQcm90bywgcmF3U3ltYm9sLCB7XG4gIHdyaXRhYmxlOiB0cnVlLFxuICB2YWx1ZToge31cbn0pXG5cbmZ1bmN0aW9uIGVyclNlcmlhbGl6ZXIgKGVycikge1xuICBpZiAoIShlcnIgaW5zdGFuY2VvZiBFcnJvcikpIHtcbiAgICByZXR1cm4gZXJyXG4gIH1cblxuICBlcnJbc2Vlbl0gPSB1bmRlZmluZWQgLy8gdGFnIHRvIHByZXZlbnQgcmUtbG9va2luZyBhdCB0aGlzXG4gIGNvbnN0IF9lcnIgPSBPYmplY3QuY3JlYXRlKHBpbm9FcnJQcm90bylcbiAgX2Vyci50eXBlID0gdG9TdHJpbmcuY2FsbChlcnIuY29uc3RydWN0b3IpID09PSAnW29iamVjdCBGdW5jdGlvbl0nXG4gICAgPyBlcnIuY29uc3RydWN0b3IubmFtZVxuICAgIDogZXJyLm5hbWVcbiAgX2Vyci5tZXNzYWdlID0gZXJyLm1lc3NhZ2VcbiAgX2Vyci5zdGFjayA9IGVyci5zdGFja1xuICBmb3IgKGNvbnN0IGtleSBpbiBlcnIpIHtcbiAgICBpZiAoX2VycltrZXldID09PSB1bmRlZmluZWQpIHtcbiAgICAgIGNvbnN0IHZhbCA9IGVycltrZXldXG4gICAgICBpZiAodmFsIGluc3RhbmNlb2YgRXJyb3IpIHtcbiAgICAgICAgLyogZXNsaW50LWRpc2FibGUgbm8tcHJvdG90eXBlLWJ1aWx0aW5zICovXG4gICAgICAgIGlmICghdmFsLmhhc093blByb3BlcnR5KHNlZW4pKSB7XG4gICAgICAgICAgX2VycltrZXldID0gZXJyU2VyaWFsaXplcih2YWwpXG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIF9lcnJba2V5XSA9IHZhbFxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGRlbGV0ZSBlcnJbc2Vlbl0gLy8gY2xlYW4gdXAgdGFnIGluIGNhc2UgZXJyIGlzIHNlcmlhbGl6ZWQgYWdhaW4gbGF0ZXJcbiAgX2Vyci5yYXcgPSBlcnJcbiAgcmV0dXJuIF9lcnJcbn1cbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiZXJyU2VyaWFsaXplciIsInRvU3RyaW5nIiwiT2JqZWN0IiwicHJvdG90eXBlIiwic2VlbiIsIlN5bWJvbCIsInJhd1N5bWJvbCIsInBpbm9FcnJQcm90byIsImNyZWF0ZSIsInR5cGUiLCJlbnVtZXJhYmxlIiwid3JpdGFibGUiLCJ2YWx1ZSIsInVuZGVmaW5lZCIsIm1lc3NhZ2UiLCJzdGFjayIsInJhdyIsImdldCIsInNldCIsInZhbCIsImRlZmluZVByb3BlcnR5IiwiZXJyIiwiRXJyb3IiLCJfZXJyIiwiY2FsbCIsImNvbnN0cnVjdG9yIiwibmFtZSIsImtleSIsImhhc093blByb3BlcnR5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/pino-std-serializers/lib/err.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/pino-std-serializers/lib/req.js":
/*!*******************************************************!*\
  !*** ../node_modules/pino-std-serializers/lib/req.js ***!
  \*******************************************************/
/***/ ((module) => {

eval("\nmodule.exports = {\n    mapHttpRequest,\n    reqSerializer\n};\nconst rawSymbol = Symbol(\"pino-raw-req-ref\");\nconst pinoReqProto = Object.create({}, {\n    id: {\n        enumerable: true,\n        writable: true,\n        value: \"\"\n    },\n    method: {\n        enumerable: true,\n        writable: true,\n        value: \"\"\n    },\n    url: {\n        enumerable: true,\n        writable: true,\n        value: \"\"\n    },\n    query: {\n        enumerable: true,\n        writable: true,\n        value: \"\"\n    },\n    params: {\n        enumerable: true,\n        writable: true,\n        value: \"\"\n    },\n    headers: {\n        enumerable: true,\n        writable: true,\n        value: {}\n    },\n    remoteAddress: {\n        enumerable: true,\n        writable: true,\n        value: \"\"\n    },\n    remotePort: {\n        enumerable: true,\n        writable: true,\n        value: \"\"\n    },\n    raw: {\n        enumerable: false,\n        get: function() {\n            return this[rawSymbol];\n        },\n        set: function(val) {\n            this[rawSymbol] = val;\n        }\n    }\n});\nObject.defineProperty(pinoReqProto, rawSymbol, {\n    writable: true,\n    value: {}\n});\nfunction reqSerializer(req) {\n    // req.info is for hapi compat.\n    const connection = req.info || req.socket;\n    const _req = Object.create(pinoReqProto);\n    _req.id = typeof req.id === \"function\" ? req.id() : req.id || (req.info ? req.info.id : undefined);\n    _req.method = req.method;\n    // req.originalUrl is for expressjs compat.\n    if (req.originalUrl) {\n        _req.url = req.originalUrl;\n        _req.query = req.query;\n        _req.params = req.params;\n    } else {\n        // req.url.path is  for hapi compat.\n        _req.url = req.path || (req.url ? req.url.path || req.url : undefined);\n    }\n    _req.headers = req.headers;\n    _req.remoteAddress = connection && connection.remoteAddress;\n    _req.remotePort = connection && connection.remotePort;\n    // req.raw is  for hapi compat/equivalence\n    _req.raw = req.raw || req;\n    return _req;\n}\nfunction mapHttpRequest(req) {\n    return {\n        req: reqSerializer(req)\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL3Bpbm8tc3RkLXNlcmlhbGl6ZXJzL2xpYi9yZXEuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQUEsT0FBT0MsT0FBTyxHQUFHO0lBQ2ZDO0lBQ0FDO0FBQ0Y7QUFFQSxNQUFNQyxZQUFZQyxPQUFPO0FBQ3pCLE1BQU1DLGVBQWVDLE9BQU9DLE1BQU0sQ0FBQyxDQUFDLEdBQUc7SUFDckNDLElBQUk7UUFDRkMsWUFBWTtRQUNaQyxVQUFVO1FBQ1ZDLE9BQU87SUFDVDtJQUNBQyxRQUFRO1FBQ05ILFlBQVk7UUFDWkMsVUFBVTtRQUNWQyxPQUFPO0lBQ1Q7SUFDQUUsS0FBSztRQUNISixZQUFZO1FBQ1pDLFVBQVU7UUFDVkMsT0FBTztJQUNUO0lBQ0FHLE9BQU87UUFDTEwsWUFBWTtRQUNaQyxVQUFVO1FBQ1ZDLE9BQU87SUFDVDtJQUNBSSxRQUFRO1FBQ05OLFlBQVk7UUFDWkMsVUFBVTtRQUNWQyxPQUFPO0lBQ1Q7SUFDQUssU0FBUztRQUNQUCxZQUFZO1FBQ1pDLFVBQVU7UUFDVkMsT0FBTyxDQUFDO0lBQ1Y7SUFDQU0sZUFBZTtRQUNiUixZQUFZO1FBQ1pDLFVBQVU7UUFDVkMsT0FBTztJQUNUO0lBQ0FPLFlBQVk7UUFDVlQsWUFBWTtRQUNaQyxVQUFVO1FBQ1ZDLE9BQU87SUFDVDtJQUNBUSxLQUFLO1FBQ0hWLFlBQVk7UUFDWlcsS0FBSztZQUNILE9BQU8sSUFBSSxDQUFDakIsVUFBVTtRQUN4QjtRQUNBa0IsS0FBSyxTQUFVQyxHQUFHO1lBQ2hCLElBQUksQ0FBQ25CLFVBQVUsR0FBR21CO1FBQ3BCO0lBQ0Y7QUFDRjtBQUNBaEIsT0FBT2lCLGNBQWMsQ0FBQ2xCLGNBQWNGLFdBQVc7SUFDN0NPLFVBQVU7SUFDVkMsT0FBTyxDQUFDO0FBQ1Y7QUFFQSxTQUFTVCxjQUFlc0IsR0FBRztJQUN6QiwrQkFBK0I7SUFDL0IsTUFBTUMsYUFBYUQsSUFBSUUsSUFBSSxJQUFJRixJQUFJRyxNQUFNO0lBQ3pDLE1BQU1DLE9BQU90QixPQUFPQyxNQUFNLENBQUNGO0lBQzNCdUIsS0FBS3BCLEVBQUUsR0FBSSxPQUFPZ0IsSUFBSWhCLEVBQUUsS0FBSyxhQUFhZ0IsSUFBSWhCLEVBQUUsS0FBTWdCLElBQUloQixFQUFFLElBQUtnQixDQUFBQSxJQUFJRSxJQUFJLEdBQUdGLElBQUlFLElBQUksQ0FBQ2xCLEVBQUUsR0FBR3FCLFNBQVE7SUFDbEdELEtBQUtoQixNQUFNLEdBQUdZLElBQUlaLE1BQU07SUFDeEIsMkNBQTJDO0lBQzNDLElBQUlZLElBQUlNLFdBQVcsRUFBRTtRQUNuQkYsS0FBS2YsR0FBRyxHQUFHVyxJQUFJTSxXQUFXO1FBQzFCRixLQUFLZCxLQUFLLEdBQUdVLElBQUlWLEtBQUs7UUFDdEJjLEtBQUtiLE1BQU0sR0FBR1MsSUFBSVQsTUFBTTtJQUMxQixPQUFPO1FBQ0wsb0NBQW9DO1FBQ3BDYSxLQUFLZixHQUFHLEdBQUdXLElBQUlPLElBQUksSUFBS1AsQ0FBQUEsSUFBSVgsR0FBRyxHQUFJVyxJQUFJWCxHQUFHLENBQUNrQixJQUFJLElBQUlQLElBQUlYLEdBQUcsR0FBSWdCLFNBQVE7SUFDeEU7SUFDQUQsS0FBS1osT0FBTyxHQUFHUSxJQUFJUixPQUFPO0lBQzFCWSxLQUFLWCxhQUFhLEdBQUdRLGNBQWNBLFdBQVdSLGFBQWE7SUFDM0RXLEtBQUtWLFVBQVUsR0FBR08sY0FBY0EsV0FBV1AsVUFBVTtJQUNyRCwwQ0FBMEM7SUFDMUNVLEtBQUtULEdBQUcsR0FBR0ssSUFBSUwsR0FBRyxJQUFJSztJQUN0QixPQUFPSTtBQUNUO0FBRUEsU0FBUzNCLGVBQWdCdUIsR0FBRztJQUMxQixPQUFPO1FBQ0xBLEtBQUt0QixjQUFjc0I7SUFDckI7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvcGluby1zdGQtc2VyaWFsaXplcnMvbGliL3JlcS5qcz8wYzBkIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgbWFwSHR0cFJlcXVlc3QsXG4gIHJlcVNlcmlhbGl6ZXJcbn1cblxuY29uc3QgcmF3U3ltYm9sID0gU3ltYm9sKCdwaW5vLXJhdy1yZXEtcmVmJylcbmNvbnN0IHBpbm9SZXFQcm90byA9IE9iamVjdC5jcmVhdGUoe30sIHtcbiAgaWQ6IHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgIHZhbHVlOiAnJ1xuICB9LFxuICBtZXRob2Q6IHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgIHZhbHVlOiAnJ1xuICB9LFxuICB1cmw6IHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgIHZhbHVlOiAnJ1xuICB9LFxuICBxdWVyeToge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgd3JpdGFibGU6IHRydWUsXG4gICAgdmFsdWU6ICcnXG4gIH0sXG4gIHBhcmFtczoge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgd3JpdGFibGU6IHRydWUsXG4gICAgdmFsdWU6ICcnXG4gIH0sXG4gIGhlYWRlcnM6IHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgIHZhbHVlOiB7fVxuICB9LFxuICByZW1vdGVBZGRyZXNzOiB7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICB2YWx1ZTogJydcbiAgfSxcbiAgcmVtb3RlUG9ydDoge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgd3JpdGFibGU6IHRydWUsXG4gICAgdmFsdWU6ICcnXG4gIH0sXG4gIHJhdzoge1xuICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIHRoaXNbcmF3U3ltYm9sXVxuICAgIH0sXG4gICAgc2V0OiBmdW5jdGlvbiAodmFsKSB7XG4gICAgICB0aGlzW3Jhd1N5bWJvbF0gPSB2YWxcbiAgICB9XG4gIH1cbn0pXG5PYmplY3QuZGVmaW5lUHJvcGVydHkocGlub1JlcVByb3RvLCByYXdTeW1ib2wsIHtcbiAgd3JpdGFibGU6IHRydWUsXG4gIHZhbHVlOiB7fVxufSlcblxuZnVuY3Rpb24gcmVxU2VyaWFsaXplciAocmVxKSB7XG4gIC8vIHJlcS5pbmZvIGlzIGZvciBoYXBpIGNvbXBhdC5cbiAgY29uc3QgY29ubmVjdGlvbiA9IHJlcS5pbmZvIHx8IHJlcS5zb2NrZXRcbiAgY29uc3QgX3JlcSA9IE9iamVjdC5jcmVhdGUocGlub1JlcVByb3RvKVxuICBfcmVxLmlkID0gKHR5cGVvZiByZXEuaWQgPT09ICdmdW5jdGlvbicgPyByZXEuaWQoKSA6IChyZXEuaWQgfHwgKHJlcS5pbmZvID8gcmVxLmluZm8uaWQgOiB1bmRlZmluZWQpKSlcbiAgX3JlcS5tZXRob2QgPSByZXEubWV0aG9kXG4gIC8vIHJlcS5vcmlnaW5hbFVybCBpcyBmb3IgZXhwcmVzc2pzIGNvbXBhdC5cbiAgaWYgKHJlcS5vcmlnaW5hbFVybCkge1xuICAgIF9yZXEudXJsID0gcmVxLm9yaWdpbmFsVXJsXG4gICAgX3JlcS5xdWVyeSA9IHJlcS5xdWVyeVxuICAgIF9yZXEucGFyYW1zID0gcmVxLnBhcmFtc1xuICB9IGVsc2Uge1xuICAgIC8vIHJlcS51cmwucGF0aCBpcyAgZm9yIGhhcGkgY29tcGF0LlxuICAgIF9yZXEudXJsID0gcmVxLnBhdGggfHwgKHJlcS51cmwgPyAocmVxLnVybC5wYXRoIHx8IHJlcS51cmwpIDogdW5kZWZpbmVkKVxuICB9XG4gIF9yZXEuaGVhZGVycyA9IHJlcS5oZWFkZXJzXG4gIF9yZXEucmVtb3RlQWRkcmVzcyA9IGNvbm5lY3Rpb24gJiYgY29ubmVjdGlvbi5yZW1vdGVBZGRyZXNzXG4gIF9yZXEucmVtb3RlUG9ydCA9IGNvbm5lY3Rpb24gJiYgY29ubmVjdGlvbi5yZW1vdGVQb3J0XG4gIC8vIHJlcS5yYXcgaXMgIGZvciBoYXBpIGNvbXBhdC9lcXVpdmFsZW5jZVxuICBfcmVxLnJhdyA9IHJlcS5yYXcgfHwgcmVxXG4gIHJldHVybiBfcmVxXG59XG5cbmZ1bmN0aW9uIG1hcEh0dHBSZXF1ZXN0IChyZXEpIHtcbiAgcmV0dXJuIHtcbiAgICByZXE6IHJlcVNlcmlhbGl6ZXIocmVxKVxuICB9XG59XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsIm1hcEh0dHBSZXF1ZXN0IiwicmVxU2VyaWFsaXplciIsInJhd1N5bWJvbCIsIlN5bWJvbCIsInBpbm9SZXFQcm90byIsIk9iamVjdCIsImNyZWF0ZSIsImlkIiwiZW51bWVyYWJsZSIsIndyaXRhYmxlIiwidmFsdWUiLCJtZXRob2QiLCJ1cmwiLCJxdWVyeSIsInBhcmFtcyIsImhlYWRlcnMiLCJyZW1vdGVBZGRyZXNzIiwicmVtb3RlUG9ydCIsInJhdyIsImdldCIsInNldCIsInZhbCIsImRlZmluZVByb3BlcnR5IiwicmVxIiwiY29ubmVjdGlvbiIsImluZm8iLCJzb2NrZXQiLCJfcmVxIiwidW5kZWZpbmVkIiwib3JpZ2luYWxVcmwiLCJwYXRoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/pino-std-serializers/lib/req.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/pino-std-serializers/lib/res.js":
/*!*******************************************************!*\
  !*** ../node_modules/pino-std-serializers/lib/res.js ***!
  \*******************************************************/
/***/ ((module) => {

eval("\nmodule.exports = {\n    mapHttpResponse,\n    resSerializer\n};\nconst rawSymbol = Symbol(\"pino-raw-res-ref\");\nconst pinoResProto = Object.create({}, {\n    statusCode: {\n        enumerable: true,\n        writable: true,\n        value: 0\n    },\n    headers: {\n        enumerable: true,\n        writable: true,\n        value: \"\"\n    },\n    raw: {\n        enumerable: false,\n        get: function() {\n            return this[rawSymbol];\n        },\n        set: function(val) {\n            this[rawSymbol] = val;\n        }\n    }\n});\nObject.defineProperty(pinoResProto, rawSymbol, {\n    writable: true,\n    value: {}\n});\nfunction resSerializer(res) {\n    const _res = Object.create(pinoResProto);\n    _res.statusCode = res.statusCode;\n    _res.headers = res.getHeaders ? res.getHeaders() : res._headers;\n    _res.raw = res;\n    return _res;\n}\nfunction mapHttpResponse(res) {\n    return {\n        res: resSerializer(res)\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL3Bpbm8tc3RkLXNlcmlhbGl6ZXJzL2xpYi9yZXMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQUEsT0FBT0MsT0FBTyxHQUFHO0lBQ2ZDO0lBQ0FDO0FBQ0Y7QUFFQSxNQUFNQyxZQUFZQyxPQUFPO0FBQ3pCLE1BQU1DLGVBQWVDLE9BQU9DLE1BQU0sQ0FBQyxDQUFDLEdBQUc7SUFDckNDLFlBQVk7UUFDVkMsWUFBWTtRQUNaQyxVQUFVO1FBQ1ZDLE9BQU87SUFDVDtJQUNBQyxTQUFTO1FBQ1BILFlBQVk7UUFDWkMsVUFBVTtRQUNWQyxPQUFPO0lBQ1Q7SUFDQUUsS0FBSztRQUNISixZQUFZO1FBQ1pLLEtBQUs7WUFDSCxPQUFPLElBQUksQ0FBQ1gsVUFBVTtRQUN4QjtRQUNBWSxLQUFLLFNBQVVDLEdBQUc7WUFDaEIsSUFBSSxDQUFDYixVQUFVLEdBQUdhO1FBQ3BCO0lBQ0Y7QUFDRjtBQUNBVixPQUFPVyxjQUFjLENBQUNaLGNBQWNGLFdBQVc7SUFDN0NPLFVBQVU7SUFDVkMsT0FBTyxDQUFDO0FBQ1Y7QUFFQSxTQUFTVCxjQUFlZ0IsR0FBRztJQUN6QixNQUFNQyxPQUFPYixPQUFPQyxNQUFNLENBQUNGO0lBQzNCYyxLQUFLWCxVQUFVLEdBQUdVLElBQUlWLFVBQVU7SUFDaENXLEtBQUtQLE9BQU8sR0FBR00sSUFBSUUsVUFBVSxHQUFHRixJQUFJRSxVQUFVLEtBQUtGLElBQUlHLFFBQVE7SUFDL0RGLEtBQUtOLEdBQUcsR0FBR0s7SUFDWCxPQUFPQztBQUNUO0FBRUEsU0FBU2xCLGdCQUFpQmlCLEdBQUc7SUFDM0IsT0FBTztRQUNMQSxLQUFLaEIsY0FBY2dCO0lBQ3JCO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL3Bpbm8tc3RkLXNlcmlhbGl6ZXJzL2xpYi9yZXMuanM/NmJiMyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIG1hcEh0dHBSZXNwb25zZSxcbiAgcmVzU2VyaWFsaXplclxufVxuXG5jb25zdCByYXdTeW1ib2wgPSBTeW1ib2woJ3Bpbm8tcmF3LXJlcy1yZWYnKVxuY29uc3QgcGlub1Jlc1Byb3RvID0gT2JqZWN0LmNyZWF0ZSh7fSwge1xuICBzdGF0dXNDb2RlOiB7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICB2YWx1ZTogMFxuICB9LFxuICBoZWFkZXJzOiB7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICB2YWx1ZTogJydcbiAgfSxcbiAgcmF3OiB7XG4gICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gdGhpc1tyYXdTeW1ib2xdXG4gICAgfSxcbiAgICBzZXQ6IGZ1bmN0aW9uICh2YWwpIHtcbiAgICAgIHRoaXNbcmF3U3ltYm9sXSA9IHZhbFxuICAgIH1cbiAgfVxufSlcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShwaW5vUmVzUHJvdG8sIHJhd1N5bWJvbCwge1xuICB3cml0YWJsZTogdHJ1ZSxcbiAgdmFsdWU6IHt9XG59KVxuXG5mdW5jdGlvbiByZXNTZXJpYWxpemVyIChyZXMpIHtcbiAgY29uc3QgX3JlcyA9IE9iamVjdC5jcmVhdGUocGlub1Jlc1Byb3RvKVxuICBfcmVzLnN0YXR1c0NvZGUgPSByZXMuc3RhdHVzQ29kZVxuICBfcmVzLmhlYWRlcnMgPSByZXMuZ2V0SGVhZGVycyA/IHJlcy5nZXRIZWFkZXJzKCkgOiByZXMuX2hlYWRlcnNcbiAgX3Jlcy5yYXcgPSByZXNcbiAgcmV0dXJuIF9yZXNcbn1cblxuZnVuY3Rpb24gbWFwSHR0cFJlc3BvbnNlIChyZXMpIHtcbiAgcmV0dXJuIHtcbiAgICByZXM6IHJlc1NlcmlhbGl6ZXIocmVzKVxuICB9XG59XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsIm1hcEh0dHBSZXNwb25zZSIsInJlc1NlcmlhbGl6ZXIiLCJyYXdTeW1ib2wiLCJTeW1ib2wiLCJwaW5vUmVzUHJvdG8iLCJPYmplY3QiLCJjcmVhdGUiLCJzdGF0dXNDb2RlIiwiZW51bWVyYWJsZSIsIndyaXRhYmxlIiwidmFsdWUiLCJoZWFkZXJzIiwicmF3IiwiZ2V0Iiwic2V0IiwidmFsIiwiZGVmaW5lUHJvcGVydHkiLCJyZXMiLCJfcmVzIiwiZ2V0SGVhZGVycyIsIl9oZWFkZXJzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/pino-std-serializers/lib/res.js\n");

/***/ })

};
;