"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/json-stable-stringify";
exports.ids = ["vendor-chunks/json-stable-stringify"];
exports.modules = {

/***/ "(ssr)/../node_modules/json-stable-stringify/index.js":
/*!******************************************************!*\
  !*** ../node_modules/json-stable-stringify/index.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nvar jsonStringify = (typeof JSON !== \"undefined\" ? JSON : __webpack_require__(/*! jsonify */ \"(ssr)/../node_modules/jsonify/index.js\")).stringify;\nvar isArray = __webpack_require__(/*! isarray */ \"(ssr)/../node_modules/isarray/index.js\");\nvar objectKeys = __webpack_require__(/*! object-keys */ \"(ssr)/../node_modules/object-keys/index.js\");\nvar callBind = __webpack_require__(/*! call-bind */ \"(ssr)/../node_modules/call-bind/index.js\");\nvar callBound = __webpack_require__(/*! call-bind/callBound */ \"(ssr)/../node_modules/call-bind/callBound.js\");\nvar $join = callBound(\"Array.prototype.join\");\nvar $push = callBound(\"Array.prototype.push\");\nvar strRepeat = function repeat(n, char) {\n    var str = \"\";\n    for(var i = 0; i < n; i += 1){\n        str += char;\n    }\n    return str;\n};\nvar defaultReplacer = function(parent, key, value) {\n    return value;\n};\nmodule.exports = function stableStringify(obj) {\n    var opts = arguments.length > 1 ? arguments[1] : void undefined;\n    var space = opts && opts.space || \"\";\n    if (typeof space === \"number\") {\n        space = strRepeat(space, \" \");\n    }\n    var cycles = !!opts && typeof opts.cycles === \"boolean\" && opts.cycles;\n    var replacer = opts && opts.replacer ? callBind(opts.replacer) : defaultReplacer;\n    var cmpOpt = typeof opts === \"function\" ? opts : opts && opts.cmp;\n    var cmp = cmpOpt && function(node) {\n        var get = cmpOpt.length > 2 && function get(k) {\n            return node[k];\n        };\n        return function(a, b) {\n            return cmpOpt({\n                key: a,\n                value: node[a]\n            }, {\n                key: b,\n                value: node[b]\n            }, get ? {\n                __proto__: null,\n                get: get\n            } : void undefined);\n        };\n    };\n    var seen = [];\n    return function stringify(parent, key, node, level) {\n        var indent = space ? \"\\n\" + strRepeat(level, space) : \"\";\n        var colonSeparator = space ? \": \" : \":\";\n        if (node && node.toJSON && typeof node.toJSON === \"function\") {\n            node = node.toJSON();\n        }\n        node = replacer(parent, key, node);\n        if (node === undefined) {\n            return;\n        }\n        if (typeof node !== \"object\" || node === null) {\n            return jsonStringify(node);\n        }\n        if (isArray(node)) {\n            var out = [];\n            for(var i = 0; i < node.length; i++){\n                var item = stringify(node, i, node[i], level + 1) || jsonStringify(null);\n                $push(out, indent + space + item);\n            }\n            return \"[\" + $join(out, \",\") + indent + \"]\";\n        }\n        if (seen.indexOf(node) !== -1) {\n            if (cycles) {\n                return jsonStringify(\"__cycle__\");\n            }\n            throw new TypeError(\"Converting circular structure to JSON\");\n        } else {\n            $push(seen, node);\n        }\n        var keys = objectKeys(node).sort(cmp && cmp(node));\n        var out = [];\n        for(var i = 0; i < keys.length; i++){\n            var key = keys[i];\n            var value = stringify(node, key, node[key], level + 1);\n            if (!value) {\n                continue;\n            }\n            var keyValue = jsonStringify(key) + colonSeparator + value;\n            $push(out, indent + space + keyValue);\n        }\n        seen.splice(seen.indexOf(node), 1);\n        return \"{\" + $join(out, \",\") + indent + \"}\";\n    }({\n        \"\": obj\n    }, \"\", obj, 0);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/json-stable-stringify/index.js\n");

/***/ })

};
;