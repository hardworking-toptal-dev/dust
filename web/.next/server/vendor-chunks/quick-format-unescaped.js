"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/quick-format-unescaped";
exports.ids = ["vendor-chunks/quick-format-unescaped"];
exports.modules = {

/***/ "(ssr)/../node_modules/quick-format-unescaped/index.js":
/*!*******************************************************!*\
  !*** ../node_modules/quick-format-unescaped/index.js ***!
  \*******************************************************/
/***/ ((module) => {

eval("\nfunction tryStringify(o) {\n    try {\n        return JSON.stringify(o);\n    } catch (e) {\n        return '\"[Circular]\"';\n    }\n}\nmodule.exports = format;\nfunction format(f, args, opts) {\n    var ss = opts && opts.stringify || tryStringify;\n    var offset = 1;\n    if (typeof f === \"object\" && f !== null) {\n        var len = args.length + offset;\n        if (len === 1) return f;\n        var objects = new Array(len);\n        objects[0] = ss(f);\n        for(var index = 1; index < len; index++){\n            objects[index] = ss(args[index]);\n        }\n        return objects.join(\" \");\n    }\n    if (typeof f !== \"string\") {\n        return f;\n    }\n    var argLen = args.length;\n    if (argLen === 0) return f;\n    var str = \"\";\n    var a = 1 - offset;\n    var lastPos = -1;\n    var flen = f && f.length || 0;\n    for(var i = 0; i < flen;){\n        if (f.charCodeAt(i) === 37 && i + 1 < flen) {\n            lastPos = lastPos > -1 ? lastPos : 0;\n            switch(f.charCodeAt(i + 1)){\n                case 100:\n                case 102:\n                    if (a >= argLen) break;\n                    if (args[a] == null) break;\n                    if (lastPos < i) str += f.slice(lastPos, i);\n                    str += Number(args[a]);\n                    lastPos = i + 2;\n                    i++;\n                    break;\n                case 105:\n                    if (a >= argLen) break;\n                    if (args[a] == null) break;\n                    if (lastPos < i) str += f.slice(lastPos, i);\n                    str += Math.floor(Number(args[a]));\n                    lastPos = i + 2;\n                    i++;\n                    break;\n                case 79:\n                case 111:\n                case 106:\n                    if (a >= argLen) break;\n                    if (args[a] === undefined) break;\n                    if (lastPos < i) str += f.slice(lastPos, i);\n                    var type = typeof args[a];\n                    if (type === \"string\") {\n                        str += \"'\" + args[a] + \"'\";\n                        lastPos = i + 2;\n                        i++;\n                        break;\n                    }\n                    if (type === \"function\") {\n                        str += args[a].name || \"<anonymous>\";\n                        lastPos = i + 2;\n                        i++;\n                        break;\n                    }\n                    str += ss(args[a]);\n                    lastPos = i + 2;\n                    i++;\n                    break;\n                case 115:\n                    if (a >= argLen) break;\n                    if (lastPos < i) str += f.slice(lastPos, i);\n                    str += String(args[a]);\n                    lastPos = i + 2;\n                    i++;\n                    break;\n                case 37:\n                    if (lastPos < i) str += f.slice(lastPos, i);\n                    str += \"%\";\n                    lastPos = i + 2;\n                    i++;\n                    a--;\n                    break;\n            }\n            ++a;\n        }\n        ++i;\n    }\n    if (lastPos === -1) return f;\n    else if (lastPos < flen) {\n        str += f.slice(lastPos);\n    }\n    return str;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL3F1aWNrLWZvcm1hdC11bmVzY2FwZWQvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSxTQUFTQSxhQUFjQyxDQUFDO0lBQ3RCLElBQUk7UUFBRSxPQUFPQyxLQUFLQyxTQUFTLENBQUNGO0lBQUcsRUFBRSxPQUFNRyxHQUFHO1FBQUUsT0FBTztJQUFlO0FBQ3BFO0FBRUFDLE9BQU9DLE9BQU8sR0FBR0M7QUFFakIsU0FBU0EsT0FBT0MsQ0FBQyxFQUFFQyxJQUFJLEVBQUVDLElBQUk7SUFDM0IsSUFBSUMsS0FBSyxRQUFTRCxLQUFLUCxTQUFTLElBQUtIO0lBQ3JDLElBQUlZLFNBQVM7SUFDYixJQUFJLE9BQU9KLE1BQU0sWUFBWUEsTUFBTSxNQUFNO1FBQ3ZDLElBQUlLLE1BQU1KLEtBQUtLLE1BQU0sR0FBR0Y7UUFDeEIsSUFBSUMsUUFBUSxHQUFHLE9BQU9MO1FBQ3RCLElBQUlPLFVBQVUsSUFBSUMsTUFBTUg7UUFDeEJFLE9BQU8sQ0FBQyxFQUFFLEdBQUdKLEdBQUdIO1FBQ2hCLElBQUssSUFBSVMsUUFBUSxHQUFHQSxRQUFRSixLQUFLSSxRQUFTO1lBQ3hDRixPQUFPLENBQUNFLE1BQU0sR0FBR04sR0FBR0YsSUFBSSxDQUFDUSxNQUFNO1FBQ2pDO1FBQ0EsT0FBT0YsUUFBUUcsSUFBSSxDQUFDO0lBQ3RCO0lBQ0EsSUFBSSxPQUFPVixNQUFNLFVBQVU7UUFDekIsT0FBT0E7SUFDVDtJQUNBLElBQUlXLFNBQVNWLEtBQUtLLE1BQU07SUFDeEIsSUFBSUssV0FBVyxHQUFHLE9BQU9YO0lBQ3pCLElBQUlZLE1BQU07SUFDVixJQUFJQyxJQUFJLElBQUlUO0lBQ1osSUFBSVUsVUFBVSxDQUFDO0lBQ2YsSUFBSUMsT0FBTyxLQUFNZixFQUFFTSxNQUFNLElBQUs7SUFDOUIsSUFBSyxJQUFJVSxJQUFJLEdBQUdBLElBQUlELE1BQU87UUFDekIsSUFBSWYsRUFBRWlCLFVBQVUsQ0FBQ0QsT0FBTyxNQUFNQSxJQUFJLElBQUlELE1BQU07WUFDMUNELFVBQVVBLFVBQVUsQ0FBQyxJQUFJQSxVQUFVO1lBQ25DLE9BQVFkLEVBQUVpQixVQUFVLENBQUNELElBQUk7Z0JBQ3ZCLEtBQUs7Z0JBQ0wsS0FBSztvQkFDSCxJQUFJSCxLQUFLRixRQUNQO29CQUNGLElBQUlWLElBQUksQ0FBQ1ksRUFBRSxJQUFJLE1BQU87b0JBQ3RCLElBQUlDLFVBQVVFLEdBQ1pKLE9BQU9aLEVBQUVrQixLQUFLLENBQUNKLFNBQVNFO29CQUMxQkosT0FBT08sT0FBT2xCLElBQUksQ0FBQ1ksRUFBRTtvQkFDckJDLFVBQVVFLElBQUk7b0JBQ2RBO29CQUNBO2dCQUNGLEtBQUs7b0JBQ0gsSUFBSUgsS0FBS0YsUUFDUDtvQkFDRixJQUFJVixJQUFJLENBQUNZLEVBQUUsSUFBSSxNQUFPO29CQUN0QixJQUFJQyxVQUFVRSxHQUNaSixPQUFPWixFQUFFa0IsS0FBSyxDQUFDSixTQUFTRTtvQkFDMUJKLE9BQU9RLEtBQUtDLEtBQUssQ0FBQ0YsT0FBT2xCLElBQUksQ0FBQ1ksRUFBRTtvQkFDaENDLFVBQVVFLElBQUk7b0JBQ2RBO29CQUNBO2dCQUNGLEtBQUs7Z0JBQ0wsS0FBSztnQkFDTCxLQUFLO29CQUNILElBQUlILEtBQUtGLFFBQ1A7b0JBQ0YsSUFBSVYsSUFBSSxDQUFDWSxFQUFFLEtBQUtTLFdBQVc7b0JBQzNCLElBQUlSLFVBQVVFLEdBQ1pKLE9BQU9aLEVBQUVrQixLQUFLLENBQUNKLFNBQVNFO29CQUMxQixJQUFJTyxPQUFPLE9BQU90QixJQUFJLENBQUNZLEVBQUU7b0JBQ3pCLElBQUlVLFNBQVMsVUFBVTt3QkFDckJYLE9BQU8sTUFBT1gsSUFBSSxDQUFDWSxFQUFFLEdBQUc7d0JBQ3hCQyxVQUFVRSxJQUFJO3dCQUNkQTt3QkFDQTtvQkFDRjtvQkFDQSxJQUFJTyxTQUFTLFlBQVk7d0JBQ3ZCWCxPQUFPWCxJQUFJLENBQUNZLEVBQUUsQ0FBQ1csSUFBSSxJQUFJO3dCQUN2QlYsVUFBVUUsSUFBSTt3QkFDZEE7d0JBQ0E7b0JBQ0Y7b0JBQ0FKLE9BQU9ULEdBQUdGLElBQUksQ0FBQ1ksRUFBRTtvQkFDakJDLFVBQVVFLElBQUk7b0JBQ2RBO29CQUNBO2dCQUNGLEtBQUs7b0JBQ0gsSUFBSUgsS0FBS0YsUUFDUDtvQkFDRixJQUFJRyxVQUFVRSxHQUNaSixPQUFPWixFQUFFa0IsS0FBSyxDQUFDSixTQUFTRTtvQkFDMUJKLE9BQU9hLE9BQU94QixJQUFJLENBQUNZLEVBQUU7b0JBQ3JCQyxVQUFVRSxJQUFJO29CQUNkQTtvQkFDQTtnQkFDRixLQUFLO29CQUNILElBQUlGLFVBQVVFLEdBQ1pKLE9BQU9aLEVBQUVrQixLQUFLLENBQUNKLFNBQVNFO29CQUMxQkosT0FBTztvQkFDUEUsVUFBVUUsSUFBSTtvQkFDZEE7b0JBQ0FIO29CQUNBO1lBQ0o7WUFDQSxFQUFFQTtRQUNKO1FBQ0EsRUFBRUc7SUFDSjtJQUNBLElBQUlGLFlBQVksQ0FBQyxHQUNmLE9BQU9kO1NBQ0osSUFBSWMsVUFBVUMsTUFBTTtRQUN2QkgsT0FBT1osRUFBRWtCLEtBQUssQ0FBQ0o7SUFDakI7SUFFQSxPQUFPRjtBQUNUIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9xdWljay1mb3JtYXQtdW5lc2NhcGVkL2luZGV4LmpzPzVmZTAiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5mdW5jdGlvbiB0cnlTdHJpbmdpZnkgKG8pIHtcbiAgdHJ5IHsgcmV0dXJuIEpTT04uc3RyaW5naWZ5KG8pIH0gY2F0Y2goZSkgeyByZXR1cm4gJ1wiW0NpcmN1bGFyXVwiJyB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZm9ybWF0XG5cbmZ1bmN0aW9uIGZvcm1hdChmLCBhcmdzLCBvcHRzKSB7XG4gIHZhciBzcyA9IChvcHRzICYmIG9wdHMuc3RyaW5naWZ5KSB8fCB0cnlTdHJpbmdpZnlcbiAgdmFyIG9mZnNldCA9IDFcbiAgaWYgKHR5cGVvZiBmID09PSAnb2JqZWN0JyAmJiBmICE9PSBudWxsKSB7XG4gICAgdmFyIGxlbiA9IGFyZ3MubGVuZ3RoICsgb2Zmc2V0XG4gICAgaWYgKGxlbiA9PT0gMSkgcmV0dXJuIGZcbiAgICB2YXIgb2JqZWN0cyA9IG5ldyBBcnJheShsZW4pXG4gICAgb2JqZWN0c1swXSA9IHNzKGYpXG4gICAgZm9yICh2YXIgaW5kZXggPSAxOyBpbmRleCA8IGxlbjsgaW5kZXgrKykge1xuICAgICAgb2JqZWN0c1tpbmRleF0gPSBzcyhhcmdzW2luZGV4XSlcbiAgICB9XG4gICAgcmV0dXJuIG9iamVjdHMuam9pbignICcpXG4gIH1cbiAgaWYgKHR5cGVvZiBmICE9PSAnc3RyaW5nJykge1xuICAgIHJldHVybiBmXG4gIH1cbiAgdmFyIGFyZ0xlbiA9IGFyZ3MubGVuZ3RoXG4gIGlmIChhcmdMZW4gPT09IDApIHJldHVybiBmXG4gIHZhciBzdHIgPSAnJ1xuICB2YXIgYSA9IDEgLSBvZmZzZXRcbiAgdmFyIGxhc3RQb3MgPSAtMVxuICB2YXIgZmxlbiA9IChmICYmIGYubGVuZ3RoKSB8fCAwXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgZmxlbjspIHtcbiAgICBpZiAoZi5jaGFyQ29kZUF0KGkpID09PSAzNyAmJiBpICsgMSA8IGZsZW4pIHtcbiAgICAgIGxhc3RQb3MgPSBsYXN0UG9zID4gLTEgPyBsYXN0UG9zIDogMFxuICAgICAgc3dpdGNoIChmLmNoYXJDb2RlQXQoaSArIDEpKSB7XG4gICAgICAgIGNhc2UgMTAwOiAvLyAnZCdcbiAgICAgICAgY2FzZSAxMDI6IC8vICdmJ1xuICAgICAgICAgIGlmIChhID49IGFyZ0xlbilcbiAgICAgICAgICAgIGJyZWFrXG4gICAgICAgICAgaWYgKGFyZ3NbYV0gPT0gbnVsbCkgIGJyZWFrXG4gICAgICAgICAgaWYgKGxhc3RQb3MgPCBpKVxuICAgICAgICAgICAgc3RyICs9IGYuc2xpY2UobGFzdFBvcywgaSlcbiAgICAgICAgICBzdHIgKz0gTnVtYmVyKGFyZ3NbYV0pXG4gICAgICAgICAgbGFzdFBvcyA9IGkgKyAyXG4gICAgICAgICAgaSsrXG4gICAgICAgICAgYnJlYWtcbiAgICAgICAgY2FzZSAxMDU6IC8vICdpJ1xuICAgICAgICAgIGlmIChhID49IGFyZ0xlbilcbiAgICAgICAgICAgIGJyZWFrXG4gICAgICAgICAgaWYgKGFyZ3NbYV0gPT0gbnVsbCkgIGJyZWFrXG4gICAgICAgICAgaWYgKGxhc3RQb3MgPCBpKVxuICAgICAgICAgICAgc3RyICs9IGYuc2xpY2UobGFzdFBvcywgaSlcbiAgICAgICAgICBzdHIgKz0gTWF0aC5mbG9vcihOdW1iZXIoYXJnc1thXSkpXG4gICAgICAgICAgbGFzdFBvcyA9IGkgKyAyXG4gICAgICAgICAgaSsrXG4gICAgICAgICAgYnJlYWtcbiAgICAgICAgY2FzZSA3OTogLy8gJ08nXG4gICAgICAgIGNhc2UgMTExOiAvLyAnbydcbiAgICAgICAgY2FzZSAxMDY6IC8vICdqJ1xuICAgICAgICAgIGlmIChhID49IGFyZ0xlbilcbiAgICAgICAgICAgIGJyZWFrXG4gICAgICAgICAgaWYgKGFyZ3NbYV0gPT09IHVuZGVmaW5lZCkgYnJlYWtcbiAgICAgICAgICBpZiAobGFzdFBvcyA8IGkpXG4gICAgICAgICAgICBzdHIgKz0gZi5zbGljZShsYXN0UG9zLCBpKVxuICAgICAgICAgIHZhciB0eXBlID0gdHlwZW9mIGFyZ3NbYV1cbiAgICAgICAgICBpZiAodHlwZSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgIHN0ciArPSAnXFwnJyArIGFyZ3NbYV0gKyAnXFwnJ1xuICAgICAgICAgICAgbGFzdFBvcyA9IGkgKyAyXG4gICAgICAgICAgICBpKytcbiAgICAgICAgICAgIGJyZWFrXG4gICAgICAgICAgfVxuICAgICAgICAgIGlmICh0eXBlID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICBzdHIgKz0gYXJnc1thXS5uYW1lIHx8ICc8YW5vbnltb3VzPidcbiAgICAgICAgICAgIGxhc3RQb3MgPSBpICsgMlxuICAgICAgICAgICAgaSsrXG4gICAgICAgICAgICBicmVha1xuICAgICAgICAgIH1cbiAgICAgICAgICBzdHIgKz0gc3MoYXJnc1thXSlcbiAgICAgICAgICBsYXN0UG9zID0gaSArIDJcbiAgICAgICAgICBpKytcbiAgICAgICAgICBicmVha1xuICAgICAgICBjYXNlIDExNTogLy8gJ3MnXG4gICAgICAgICAgaWYgKGEgPj0gYXJnTGVuKVxuICAgICAgICAgICAgYnJlYWtcbiAgICAgICAgICBpZiAobGFzdFBvcyA8IGkpXG4gICAgICAgICAgICBzdHIgKz0gZi5zbGljZShsYXN0UG9zLCBpKVxuICAgICAgICAgIHN0ciArPSBTdHJpbmcoYXJnc1thXSlcbiAgICAgICAgICBsYXN0UG9zID0gaSArIDJcbiAgICAgICAgICBpKytcbiAgICAgICAgICBicmVha1xuICAgICAgICBjYXNlIDM3OiAvLyAnJSdcbiAgICAgICAgICBpZiAobGFzdFBvcyA8IGkpXG4gICAgICAgICAgICBzdHIgKz0gZi5zbGljZShsYXN0UG9zLCBpKVxuICAgICAgICAgIHN0ciArPSAnJSdcbiAgICAgICAgICBsYXN0UG9zID0gaSArIDJcbiAgICAgICAgICBpKytcbiAgICAgICAgICBhLS1cbiAgICAgICAgICBicmVha1xuICAgICAgfVxuICAgICAgKythXG4gICAgfVxuICAgICsraVxuICB9XG4gIGlmIChsYXN0UG9zID09PSAtMSlcbiAgICByZXR1cm4gZlxuICBlbHNlIGlmIChsYXN0UG9zIDwgZmxlbikge1xuICAgIHN0ciArPSBmLnNsaWNlKGxhc3RQb3MpXG4gIH1cblxuICByZXR1cm4gc3RyXG59XG4iXSwibmFtZXMiOlsidHJ5U3RyaW5naWZ5IiwibyIsIkpTT04iLCJzdHJpbmdpZnkiLCJlIiwibW9kdWxlIiwiZXhwb3J0cyIsImZvcm1hdCIsImYiLCJhcmdzIiwib3B0cyIsInNzIiwib2Zmc2V0IiwibGVuIiwibGVuZ3RoIiwib2JqZWN0cyIsIkFycmF5IiwiaW5kZXgiLCJqb2luIiwiYXJnTGVuIiwic3RyIiwiYSIsImxhc3RQb3MiLCJmbGVuIiwiaSIsImNoYXJDb2RlQXQiLCJzbGljZSIsIk51bWJlciIsIk1hdGgiLCJmbG9vciIsInVuZGVmaW5lZCIsInR5cGUiLCJuYW1lIiwiU3RyaW5nIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/quick-format-unescaped/index.js\n");

/***/ })

};
;