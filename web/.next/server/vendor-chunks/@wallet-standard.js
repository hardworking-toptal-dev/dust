"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@wallet-standard";
exports.ids = ["vendor-chunks/@wallet-standard"];
exports.modules = {

/***/ "(ssr)/../node_modules/@wallet-standard/app/lib/esm/wallets.js":
/*!***************************************************************!*\
  !*** ../node_modules/@wallet-standard/app/lib/esm/wallets.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEPRECATED_getWallets: () => (/* binding */ DEPRECATED_getWallets),\n/* harmony export */   getWallets: () => (/* binding */ getWallets)\n/* harmony export */ });\nvar __classPrivateFieldSet = undefined && undefined.__classPrivateFieldSet || function(receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __classPrivateFieldGet = undefined && undefined.__classPrivateFieldGet || function(receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _AppReadyEvent_detail;\nlet wallets = undefined;\nconst registered = new Set();\nconst listeners = {};\n/**\n * Get an API for {@link Wallets.get | getting}, {@link Wallets.on | listening for}, and\n * {@link Wallets.register | registering} {@link \"@wallet-standard/base\".Wallet | Wallets}.\n *\n * When called for the first time --\n *\n * This dispatches a {@link \"@wallet-standard/base\".WindowAppReadyEvent} to notify each Wallet that the app is ready\n * to register it.\n *\n * This also adds a listener for {@link \"@wallet-standard/base\".WindowRegisterWalletEvent} to listen for a notification\n * from each Wallet that the Wallet is ready to be registered by the app.\n *\n * This combination of event dispatch and listener guarantees that each Wallet will be registered synchronously as soon\n * as the app is ready whether the app loads before or after each Wallet.\n *\n * @return API for getting, listening for, and registering Wallets.\n *\n * @group App\n */ function getWallets() {\n    if (wallets) return wallets;\n    wallets = Object.freeze({\n        register,\n        get,\n        on\n    });\n    if (true) return wallets;\n    const api = Object.freeze({\n        register\n    });\n    try {\n        window.addEventListener(\"wallet-standard:register-wallet\", ({ detail: callback })=>callback(api));\n    } catch (error) {\n        console.error(\"wallet-standard:register-wallet event listener could not be added\\n\", error);\n    }\n    try {\n        window.dispatchEvent(new AppReadyEvent(api));\n    } catch (error) {\n        console.error(\"wallet-standard:app-ready event could not be dispatched\\n\", error);\n    }\n    return wallets;\n}\nfunction register(...wallets) {\n    // Filter out wallets that have already been registered.\n    // This prevents the same wallet from being registered twice, but it also prevents wallets from being\n    // unregistered by reusing a reference to the wallet to obtain the unregister function for it.\n    wallets = wallets.filter((wallet)=>!registered.has(wallet));\n    // If there are no new wallets to register, just return a no-op unregister function.\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    if (!wallets.length) return ()=>{};\n    wallets.forEach((wallet)=>registered.add(wallet));\n    listeners[\"register\"]?.forEach((listener)=>guard(()=>listener(...wallets)));\n    // Return a function that unregisters the registered wallets.\n    return function unregister() {\n        wallets.forEach((wallet)=>registered.delete(wallet));\n        listeners[\"unregister\"]?.forEach((listener)=>guard(()=>listener(...wallets)));\n    };\n}\nfunction get() {\n    return [\n        ...registered\n    ];\n}\nfunction on(event, listener) {\n    listeners[event]?.push(listener) || (listeners[event] = [\n        listener\n    ]);\n    // Return a function that removes the event listener.\n    return function off() {\n        listeners[event] = listeners[event]?.filter((existingListener)=>listener !== existingListener);\n    };\n}\nfunction guard(callback) {\n    try {\n        callback();\n    } catch (error) {\n        console.error(error);\n    }\n}\nclass AppReadyEvent extends Event {\n    constructor(api){\n        super(\"wallet-standard:app-ready\", {\n            bubbles: false,\n            cancelable: false,\n            composed: false\n        });\n        _AppReadyEvent_detail.set(this, void 0);\n        __classPrivateFieldSet(this, _AppReadyEvent_detail, api, \"f\");\n    }\n    get detail() {\n        return __classPrivateFieldGet(this, _AppReadyEvent_detail, \"f\");\n    }\n    get type() {\n        return \"wallet-standard:app-ready\";\n    }\n    /** @deprecated */ preventDefault() {\n        throw new Error(\"preventDefault cannot be called\");\n    }\n    /** @deprecated */ stopImmediatePropagation() {\n        throw new Error(\"stopImmediatePropagation cannot be called\");\n    }\n    /** @deprecated */ stopPropagation() {\n        throw new Error(\"stopPropagation cannot be called\");\n    }\n}\n_AppReadyEvent_detail = new WeakMap();\n/**\n * @deprecated Use {@link getWallets} instead.\n *\n * @group Deprecated\n */ function DEPRECATED_getWallets() {\n    if (wallets) return wallets;\n    wallets = getWallets();\n    if (true) return wallets;\n    const callbacks = window.navigator.wallets || [];\n    if (!Array.isArray(callbacks)) {\n        console.error(\"window.navigator.wallets is not an array\");\n        return wallets;\n    }\n    const { register } = wallets;\n    const push = (...callbacks)=>callbacks.forEach((callback)=>guard(()=>callback({\n                    register\n                })));\n    try {\n        Object.defineProperty(window.navigator, \"wallets\", {\n            value: Object.freeze({\n                push\n            })\n        });\n    } catch (error) {\n        console.error(\"window.navigator.wallets could not be set\");\n        return wallets;\n    }\n    push(...callbacks);\n    return wallets;\n} //# sourceMappingURL=wallets.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXQtc3RhbmRhcmQvYXBwL2xpYi9lc20vd2FsbGV0cy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLElBQUlBLHlCQUF5QixTQUFLLElBQUksU0FBSSxDQUFDQSxzQkFBc0IsSUFBSyxTQUFVQyxRQUFRLEVBQUVDLEtBQUssRUFBRUMsS0FBSyxFQUFFQyxJQUFJLEVBQUVDLENBQUM7SUFDM0csSUFBSUQsU0FBUyxLQUFLLE1BQU0sSUFBSUUsVUFBVTtJQUN0QyxJQUFJRixTQUFTLE9BQU8sQ0FBQ0MsR0FBRyxNQUFNLElBQUlDLFVBQVU7SUFDNUMsSUFBSSxPQUFPSixVQUFVLGFBQWFELGFBQWFDLFNBQVMsQ0FBQ0csSUFBSSxDQUFDSCxNQUFNSyxHQUFHLENBQUNOLFdBQVcsTUFBTSxJQUFJSyxVQUFVO0lBQ3ZHLE9BQU8sU0FBVSxNQUFNRCxFQUFFRyxJQUFJLENBQUNQLFVBQVVFLFNBQVNFLElBQUlBLEVBQUVGLEtBQUssR0FBR0EsUUFBUUQsTUFBTU8sR0FBRyxDQUFDUixVQUFVRSxRQUFTQTtBQUN4RztBQUNBLElBQUlPLHlCQUF5QixTQUFLLElBQUksU0FBSSxDQUFDQSxzQkFBc0IsSUFBSyxTQUFVVCxRQUFRLEVBQUVDLEtBQUssRUFBRUUsSUFBSSxFQUFFQyxDQUFDO0lBQ3BHLElBQUlELFNBQVMsT0FBTyxDQUFDQyxHQUFHLE1BQU0sSUFBSUMsVUFBVTtJQUM1QyxJQUFJLE9BQU9KLFVBQVUsYUFBYUQsYUFBYUMsU0FBUyxDQUFDRyxJQUFJLENBQUNILE1BQU1LLEdBQUcsQ0FBQ04sV0FBVyxNQUFNLElBQUlLLFVBQVU7SUFDdkcsT0FBT0YsU0FBUyxNQUFNQyxJQUFJRCxTQUFTLE1BQU1DLEVBQUVHLElBQUksQ0FBQ1AsWUFBWUksSUFBSUEsRUFBRUYsS0FBSyxHQUFHRCxNQUFNUyxHQUFHLENBQUNWO0FBQ3hGO0FBQ0EsSUFBSVc7QUFDSixJQUFJQyxVQUFVQztBQUNkLE1BQU1DLGFBQWEsSUFBSUM7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R0FDTSxTQUFTQztJQUNaLElBQUkzQyxTQUNBLE9BQU9BO0lBQ1hBLFVBQVVLO0lBQ1YsSUFBSSxJQUFrQixFQUNsQixPQUFPTDtJQUNYLE1BQU00QyxZQUFZakMsT0FBT2tDLFNBQVMsQ0FBQzdDLE9BQU8sSUFBSSxFQUFFO0lBQ2hELElBQUksQ0FBQzhDLE1BQU1DLE9BQU8sQ0FBQ0gsWUFBWTtRQUMzQjVCLFFBQVFELEtBQUssQ0FBQztRQUNkLE9BQU9mO0lBQ1g7SUFDQSxNQUFNLEVBQUVRLFFBQVEsRUFBRSxHQUFHUjtJQUNyQixNQUFNNkIsT0FBTyxDQUFDLEdBQUdlLFlBQWNBLFVBQVV0QixPQUFPLENBQUMsQ0FBQ1IsV0FBYVcsTUFBTSxJQUFNWCxTQUFTO29CQUFFTjtnQkFBUztJQUMvRixJQUFJO1FBQ0FGLE9BQU8wQyxjQUFjLENBQUNyQyxPQUFPa0MsU0FBUyxFQUFFLFdBQVc7WUFDL0N2RCxPQUFPZ0IsT0FBT0MsTUFBTSxDQUFDO2dCQUFFc0I7WUFBSztRQUNoQztJQUNKLEVBQ0EsT0FBT2QsT0FBTztRQUNWQyxRQUFRRCxLQUFLLENBQUM7UUFDZCxPQUFPZjtJQUNYO0lBQ0E2QixRQUFRZTtJQUNSLE9BQU81QztBQUNYLEVBQ0EsbUNBQW1DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9Ad2FsbGV0LXN0YW5kYXJkL2FwcC9saWIvZXNtL3dhbGxldHMuanM/ZTIzZiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgX19jbGFzc1ByaXZhdGVGaWVsZFNldCA9ICh0aGlzICYmIHRoaXMuX19jbGFzc1ByaXZhdGVGaWVsZFNldCkgfHwgZnVuY3Rpb24gKHJlY2VpdmVyLCBzdGF0ZSwgdmFsdWUsIGtpbmQsIGYpIHtcbiAgICBpZiAoa2luZCA9PT0gXCJtXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJQcml2YXRlIG1ldGhvZCBpcyBub3Qgd3JpdGFibGVcIik7XG4gICAgaWYgKGtpbmQgPT09IFwiYVwiICYmICFmKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiUHJpdmF0ZSBhY2Nlc3NvciB3YXMgZGVmaW5lZCB3aXRob3V0IGEgc2V0dGVyXCIpO1xuICAgIGlmICh0eXBlb2Ygc3RhdGUgPT09IFwiZnVuY3Rpb25cIiA/IHJlY2VpdmVyICE9PSBzdGF0ZSB8fCAhZiA6ICFzdGF0ZS5oYXMocmVjZWl2ZXIpKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IHdyaXRlIHByaXZhdGUgbWVtYmVyIHRvIGFuIG9iamVjdCB3aG9zZSBjbGFzcyBkaWQgbm90IGRlY2xhcmUgaXRcIik7XG4gICAgcmV0dXJuIChraW5kID09PSBcImFcIiA/IGYuY2FsbChyZWNlaXZlciwgdmFsdWUpIDogZiA/IGYudmFsdWUgPSB2YWx1ZSA6IHN0YXRlLnNldChyZWNlaXZlciwgdmFsdWUpKSwgdmFsdWU7XG59O1xudmFyIF9fY2xhc3NQcml2YXRlRmllbGRHZXQgPSAodGhpcyAmJiB0aGlzLl9fY2xhc3NQcml2YXRlRmllbGRHZXQpIHx8IGZ1bmN0aW9uIChyZWNlaXZlciwgc3RhdGUsIGtpbmQsIGYpIHtcbiAgICBpZiAoa2luZCA9PT0gXCJhXCIgJiYgIWYpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJQcml2YXRlIGFjY2Vzc29yIHdhcyBkZWZpbmVkIHdpdGhvdXQgYSBnZXR0ZXJcIik7XG4gICAgaWYgKHR5cGVvZiBzdGF0ZSA9PT0gXCJmdW5jdGlvblwiID8gcmVjZWl2ZXIgIT09IHN0YXRlIHx8ICFmIDogIXN0YXRlLmhhcyhyZWNlaXZlcikpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgcmVhZCBwcml2YXRlIG1lbWJlciBmcm9tIGFuIG9iamVjdCB3aG9zZSBjbGFzcyBkaWQgbm90IGRlY2xhcmUgaXRcIik7XG4gICAgcmV0dXJuIGtpbmQgPT09IFwibVwiID8gZiA6IGtpbmQgPT09IFwiYVwiID8gZi5jYWxsKHJlY2VpdmVyKSA6IGYgPyBmLnZhbHVlIDogc3RhdGUuZ2V0KHJlY2VpdmVyKTtcbn07XG52YXIgX0FwcFJlYWR5RXZlbnRfZGV0YWlsO1xubGV0IHdhbGxldHMgPSB1bmRlZmluZWQ7XG5jb25zdCByZWdpc3RlcmVkID0gbmV3IFNldCgpO1xuY29uc3QgbGlzdGVuZXJzID0ge307XG4vKipcbiAqIEdldCBhbiBBUEkgZm9yIHtAbGluayBXYWxsZXRzLmdldCB8IGdldHRpbmd9LCB7QGxpbmsgV2FsbGV0cy5vbiB8IGxpc3RlbmluZyBmb3J9LCBhbmRcbiAqIHtAbGluayBXYWxsZXRzLnJlZ2lzdGVyIHwgcmVnaXN0ZXJpbmd9IHtAbGluayBcIkB3YWxsZXQtc3RhbmRhcmQvYmFzZVwiLldhbGxldCB8IFdhbGxldHN9LlxuICpcbiAqIFdoZW4gY2FsbGVkIGZvciB0aGUgZmlyc3QgdGltZSAtLVxuICpcbiAqIFRoaXMgZGlzcGF0Y2hlcyBhIHtAbGluayBcIkB3YWxsZXQtc3RhbmRhcmQvYmFzZVwiLldpbmRvd0FwcFJlYWR5RXZlbnR9IHRvIG5vdGlmeSBlYWNoIFdhbGxldCB0aGF0IHRoZSBhcHAgaXMgcmVhZHlcbiAqIHRvIHJlZ2lzdGVyIGl0LlxuICpcbiAqIFRoaXMgYWxzbyBhZGRzIGEgbGlzdGVuZXIgZm9yIHtAbGluayBcIkB3YWxsZXQtc3RhbmRhcmQvYmFzZVwiLldpbmRvd1JlZ2lzdGVyV2FsbGV0RXZlbnR9IHRvIGxpc3RlbiBmb3IgYSBub3RpZmljYXRpb25cbiAqIGZyb20gZWFjaCBXYWxsZXQgdGhhdCB0aGUgV2FsbGV0IGlzIHJlYWR5IHRvIGJlIHJlZ2lzdGVyZWQgYnkgdGhlIGFwcC5cbiAqXG4gKiBUaGlzIGNvbWJpbmF0aW9uIG9mIGV2ZW50IGRpc3BhdGNoIGFuZCBsaXN0ZW5lciBndWFyYW50ZWVzIHRoYXQgZWFjaCBXYWxsZXQgd2lsbCBiZSByZWdpc3RlcmVkIHN5bmNocm9ub3VzbHkgYXMgc29vblxuICogYXMgdGhlIGFwcCBpcyByZWFkeSB3aGV0aGVyIHRoZSBhcHAgbG9hZHMgYmVmb3JlIG9yIGFmdGVyIGVhY2ggV2FsbGV0LlxuICpcbiAqIEByZXR1cm4gQVBJIGZvciBnZXR0aW5nLCBsaXN0ZW5pbmcgZm9yLCBhbmQgcmVnaXN0ZXJpbmcgV2FsbGV0cy5cbiAqXG4gKiBAZ3JvdXAgQXBwXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRXYWxsZXRzKCkge1xuICAgIGlmICh3YWxsZXRzKVxuICAgICAgICByZXR1cm4gd2FsbGV0cztcbiAgICB3YWxsZXRzID0gT2JqZWN0LmZyZWV6ZSh7IHJlZ2lzdGVyLCBnZXQsIG9uIH0pO1xuICAgIGlmICh0eXBlb2Ygd2luZG93ID09PSAndW5kZWZpbmVkJylcbiAgICAgICAgcmV0dXJuIHdhbGxldHM7XG4gICAgY29uc3QgYXBpID0gT2JqZWN0LmZyZWV6ZSh7IHJlZ2lzdGVyIH0pO1xuICAgIHRyeSB7XG4gICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCd3YWxsZXQtc3RhbmRhcmQ6cmVnaXN0ZXItd2FsbGV0JywgKHsgZGV0YWlsOiBjYWxsYmFjayB9KSA9PiBjYWxsYmFjayhhcGkpKTtcbiAgICB9XG4gICAgY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ3dhbGxldC1zdGFuZGFyZDpyZWdpc3Rlci13YWxsZXQgZXZlbnQgbGlzdGVuZXIgY291bGQgbm90IGJlIGFkZGVkXFxuJywgZXJyb3IpO1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgICB3aW5kb3cuZGlzcGF0Y2hFdmVudChuZXcgQXBwUmVhZHlFdmVudChhcGkpKTtcbiAgICB9XG4gICAgY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ3dhbGxldC1zdGFuZGFyZDphcHAtcmVhZHkgZXZlbnQgY291bGQgbm90IGJlIGRpc3BhdGNoZWRcXG4nLCBlcnJvcik7XG4gICAgfVxuICAgIHJldHVybiB3YWxsZXRzO1xufVxuZnVuY3Rpb24gcmVnaXN0ZXIoLi4ud2FsbGV0cykge1xuICAgIC8vIEZpbHRlciBvdXQgd2FsbGV0cyB0aGF0IGhhdmUgYWxyZWFkeSBiZWVuIHJlZ2lzdGVyZWQuXG4gICAgLy8gVGhpcyBwcmV2ZW50cyB0aGUgc2FtZSB3YWxsZXQgZnJvbSBiZWluZyByZWdpc3RlcmVkIHR3aWNlLCBidXQgaXQgYWxzbyBwcmV2ZW50cyB3YWxsZXRzIGZyb20gYmVpbmdcbiAgICAvLyB1bnJlZ2lzdGVyZWQgYnkgcmV1c2luZyBhIHJlZmVyZW5jZSB0byB0aGUgd2FsbGV0IHRvIG9idGFpbiB0aGUgdW5yZWdpc3RlciBmdW5jdGlvbiBmb3IgaXQuXG4gICAgd2FsbGV0cyA9IHdhbGxldHMuZmlsdGVyKCh3YWxsZXQpID0+ICFyZWdpc3RlcmVkLmhhcyh3YWxsZXQpKTtcbiAgICAvLyBJZiB0aGVyZSBhcmUgbm8gbmV3IHdhbGxldHMgdG8gcmVnaXN0ZXIsIGp1c3QgcmV0dXJuIGEgbm8tb3AgdW5yZWdpc3RlciBmdW5jdGlvbi5cbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWVtcHR5LWZ1bmN0aW9uXG4gICAgaWYgKCF3YWxsZXRzLmxlbmd0aClcbiAgICAgICAgcmV0dXJuICgpID0+IHsgfTtcbiAgICB3YWxsZXRzLmZvckVhY2goKHdhbGxldCkgPT4gcmVnaXN0ZXJlZC5hZGQod2FsbGV0KSk7XG4gICAgbGlzdGVuZXJzWydyZWdpc3RlciddPy5mb3JFYWNoKChsaXN0ZW5lcikgPT4gZ3VhcmQoKCkgPT4gbGlzdGVuZXIoLi4ud2FsbGV0cykpKTtcbiAgICAvLyBSZXR1cm4gYSBmdW5jdGlvbiB0aGF0IHVucmVnaXN0ZXJzIHRoZSByZWdpc3RlcmVkIHdhbGxldHMuXG4gICAgcmV0dXJuIGZ1bmN0aW9uIHVucmVnaXN0ZXIoKSB7XG4gICAgICAgIHdhbGxldHMuZm9yRWFjaCgod2FsbGV0KSA9PiByZWdpc3RlcmVkLmRlbGV0ZSh3YWxsZXQpKTtcbiAgICAgICAgbGlzdGVuZXJzWyd1bnJlZ2lzdGVyJ10/LmZvckVhY2goKGxpc3RlbmVyKSA9PiBndWFyZCgoKSA9PiBsaXN0ZW5lciguLi53YWxsZXRzKSkpO1xuICAgIH07XG59XG5mdW5jdGlvbiBnZXQoKSB7XG4gICAgcmV0dXJuIFsuLi5yZWdpc3RlcmVkXTtcbn1cbmZ1bmN0aW9uIG9uKGV2ZW50LCBsaXN0ZW5lcikge1xuICAgIGxpc3RlbmVyc1tldmVudF0/LnB1c2gobGlzdGVuZXIpIHx8IChsaXN0ZW5lcnNbZXZlbnRdID0gW2xpc3RlbmVyXSk7XG4gICAgLy8gUmV0dXJuIGEgZnVuY3Rpb24gdGhhdCByZW1vdmVzIHRoZSBldmVudCBsaXN0ZW5lci5cbiAgICByZXR1cm4gZnVuY3Rpb24gb2ZmKCkge1xuICAgICAgICBsaXN0ZW5lcnNbZXZlbnRdID0gbGlzdGVuZXJzW2V2ZW50XT8uZmlsdGVyKChleGlzdGluZ0xpc3RlbmVyKSA9PiBsaXN0ZW5lciAhPT0gZXhpc3RpbmdMaXN0ZW5lcik7XG4gICAgfTtcbn1cbmZ1bmN0aW9uIGd1YXJkKGNhbGxiYWNrKSB7XG4gICAgdHJ5IHtcbiAgICAgICAgY2FsbGJhY2soKTtcbiAgICB9XG4gICAgY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpO1xuICAgIH1cbn1cbmNsYXNzIEFwcFJlYWR5RXZlbnQgZXh0ZW5kcyBFdmVudCB7XG4gICAgY29uc3RydWN0b3IoYXBpKSB7XG4gICAgICAgIHN1cGVyKCd3YWxsZXQtc3RhbmRhcmQ6YXBwLXJlYWR5Jywge1xuICAgICAgICAgICAgYnViYmxlczogZmFsc2UsXG4gICAgICAgICAgICBjYW5jZWxhYmxlOiBmYWxzZSxcbiAgICAgICAgICAgIGNvbXBvc2VkOiBmYWxzZSxcbiAgICAgICAgfSk7XG4gICAgICAgIF9BcHBSZWFkeUV2ZW50X2RldGFpbC5zZXQodGhpcywgdm9pZCAwKTtcbiAgICAgICAgX19jbGFzc1ByaXZhdGVGaWVsZFNldCh0aGlzLCBfQXBwUmVhZHlFdmVudF9kZXRhaWwsIGFwaSwgXCJmXCIpO1xuICAgIH1cbiAgICBnZXQgZGV0YWlsKCkge1xuICAgICAgICByZXR1cm4gX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfQXBwUmVhZHlFdmVudF9kZXRhaWwsIFwiZlwiKTtcbiAgICB9XG4gICAgZ2V0IHR5cGUoKSB7XG4gICAgICAgIHJldHVybiAnd2FsbGV0LXN0YW5kYXJkOmFwcC1yZWFkeSc7XG4gICAgfVxuICAgIC8qKiBAZGVwcmVjYXRlZCAqL1xuICAgIHByZXZlbnREZWZhdWx0KCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ3ByZXZlbnREZWZhdWx0IGNhbm5vdCBiZSBjYWxsZWQnKTtcbiAgICB9XG4gICAgLyoqIEBkZXByZWNhdGVkICovXG4gICAgc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ3N0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbiBjYW5ub3QgYmUgY2FsbGVkJyk7XG4gICAgfVxuICAgIC8qKiBAZGVwcmVjYXRlZCAqL1xuICAgIHN0b3BQcm9wYWdhdGlvbigpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdzdG9wUHJvcGFnYXRpb24gY2Fubm90IGJlIGNhbGxlZCcpO1xuICAgIH1cbn1cbl9BcHBSZWFkeUV2ZW50X2RldGFpbCA9IG5ldyBXZWFrTWFwKCk7XG4vKipcbiAqIEBkZXByZWNhdGVkIFVzZSB7QGxpbmsgZ2V0V2FsbGV0c30gaW5zdGVhZC5cbiAqXG4gKiBAZ3JvdXAgRGVwcmVjYXRlZFxuICovXG5leHBvcnQgZnVuY3Rpb24gREVQUkVDQVRFRF9nZXRXYWxsZXRzKCkge1xuICAgIGlmICh3YWxsZXRzKVxuICAgICAgICByZXR1cm4gd2FsbGV0cztcbiAgICB3YWxsZXRzID0gZ2V0V2FsbGV0cygpO1xuICAgIGlmICh0eXBlb2Ygd2luZG93ID09PSAndW5kZWZpbmVkJylcbiAgICAgICAgcmV0dXJuIHdhbGxldHM7XG4gICAgY29uc3QgY2FsbGJhY2tzID0gd2luZG93Lm5hdmlnYXRvci53YWxsZXRzIHx8IFtdO1xuICAgIGlmICghQXJyYXkuaXNBcnJheShjYWxsYmFja3MpKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ3dpbmRvdy5uYXZpZ2F0b3Iud2FsbGV0cyBpcyBub3QgYW4gYXJyYXknKTtcbiAgICAgICAgcmV0dXJuIHdhbGxldHM7XG4gICAgfVxuICAgIGNvbnN0IHsgcmVnaXN0ZXIgfSA9IHdhbGxldHM7XG4gICAgY29uc3QgcHVzaCA9ICguLi5jYWxsYmFja3MpID0+IGNhbGxiYWNrcy5mb3JFYWNoKChjYWxsYmFjaykgPT4gZ3VhcmQoKCkgPT4gY2FsbGJhY2soeyByZWdpc3RlciB9KSkpO1xuICAgIHRyeSB7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh3aW5kb3cubmF2aWdhdG9yLCAnd2FsbGV0cycsIHtcbiAgICAgICAgICAgIHZhbHVlOiBPYmplY3QuZnJlZXplKHsgcHVzaCB9KSxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGNhdGNoIChlcnJvcikge1xuICAgICAgICBjb25zb2xlLmVycm9yKCd3aW5kb3cubmF2aWdhdG9yLndhbGxldHMgY291bGQgbm90IGJlIHNldCcpO1xuICAgICAgICByZXR1cm4gd2FsbGV0cztcbiAgICB9XG4gICAgcHVzaCguLi5jYWxsYmFja3MpO1xuICAgIHJldHVybiB3YWxsZXRzO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9d2FsbGV0cy5qcy5tYXAiXSwibmFtZXMiOlsiX19jbGFzc1ByaXZhdGVGaWVsZFNldCIsInJlY2VpdmVyIiwic3RhdGUiLCJ2YWx1ZSIsImtpbmQiLCJmIiwiVHlwZUVycm9yIiwiaGFzIiwiY2FsbCIsInNldCIsIl9fY2xhc3NQcml2YXRlRmllbGRHZXQiLCJnZXQiLCJfQXBwUmVhZHlFdmVudF9kZXRhaWwiLCJ3YWxsZXRzIiwidW5kZWZpbmVkIiwicmVnaXN0ZXJlZCIsIlNldCIsImxpc3RlbmVycyIsImdldFdhbGxldHMiLCJPYmplY3QiLCJmcmVlemUiLCJyZWdpc3RlciIsIm9uIiwiYXBpIiwid2luZG93IiwiYWRkRXZlbnRMaXN0ZW5lciIsImRldGFpbCIsImNhbGxiYWNrIiwiZXJyb3IiLCJjb25zb2xlIiwiZGlzcGF0Y2hFdmVudCIsIkFwcFJlYWR5RXZlbnQiLCJmaWx0ZXIiLCJ3YWxsZXQiLCJsZW5ndGgiLCJmb3JFYWNoIiwiYWRkIiwibGlzdGVuZXIiLCJndWFyZCIsInVucmVnaXN0ZXIiLCJkZWxldGUiLCJldmVudCIsInB1c2giLCJvZmYiLCJleGlzdGluZ0xpc3RlbmVyIiwiRXZlbnQiLCJjb25zdHJ1Y3RvciIsImJ1YmJsZXMiLCJjYW5jZWxhYmxlIiwiY29tcG9zZWQiLCJ0eXBlIiwicHJldmVudERlZmF1bHQiLCJFcnJvciIsInN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbiIsInN0b3BQcm9wYWdhdGlvbiIsIldlYWtNYXAiLCJERVBSRUNBVEVEX2dldFdhbGxldHMiLCJjYWxsYmFja3MiLCJuYXZpZ2F0b3IiLCJBcnJheSIsImlzQXJyYXkiLCJkZWZpbmVQcm9wZXJ0eSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@wallet-standard/app/lib/esm/wallets.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@wallet-standard/features/lib/esm/connect.js":
/*!********************************************************************!*\
  !*** ../node_modules/@wallet-standard/features/lib/esm/connect.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Connect: () => (/* binding */ Connect),\n/* harmony export */   StandardConnect: () => (/* binding */ StandardConnect)\n/* harmony export */ });\n/** Name of the feature. */ const StandardConnect = \"standard:connect\";\n/**\n * @deprecated Use {@link StandardConnect} instead.\n *\n * @group Deprecated\n */ const Connect = StandardConnect; //# sourceMappingURL=connect.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXQtc3RhbmRhcmQvZmVhdHVyZXMvbGliL2VzbS9jb25uZWN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEseUJBQXlCLEdBQ2xCLE1BQU1BLGtCQUFrQixtQkFBbUI7QUFDbEQ7Ozs7Q0FJQyxHQUNNLE1BQU1DLFVBQVVELGdCQUFnQixDQUN2QyxtQ0FBbUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXQtc3RhbmRhcmQvZmVhdHVyZXMvbGliL2VzbS9jb25uZWN0LmpzPzUzYzciXSwic291cmNlc0NvbnRlbnQiOlsiLyoqIE5hbWUgb2YgdGhlIGZlYXR1cmUuICovXG5leHBvcnQgY29uc3QgU3RhbmRhcmRDb25uZWN0ID0gJ3N0YW5kYXJkOmNvbm5lY3QnO1xuLyoqXG4gKiBAZGVwcmVjYXRlZCBVc2Uge0BsaW5rIFN0YW5kYXJkQ29ubmVjdH0gaW5zdGVhZC5cbiAqXG4gKiBAZ3JvdXAgRGVwcmVjYXRlZFxuICovXG5leHBvcnQgY29uc3QgQ29ubmVjdCA9IFN0YW5kYXJkQ29ubmVjdDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbm5lY3QuanMubWFwIl0sIm5hbWVzIjpbIlN0YW5kYXJkQ29ubmVjdCIsIkNvbm5lY3QiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@wallet-standard/features/lib/esm/connect.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@wallet-standard/features/lib/esm/disconnect.js":
/*!***********************************************************************!*\
  !*** ../node_modules/@wallet-standard/features/lib/esm/disconnect.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Disconnect: () => (/* binding */ Disconnect),\n/* harmony export */   StandardDisconnect: () => (/* binding */ StandardDisconnect)\n/* harmony export */ });\n/** Name of the feature. */ const StandardDisconnect = \"standard:disconnect\";\n/**\n * @deprecated Use {@link StandardDisconnect} instead.\n *\n * @group Deprecated\n */ const Disconnect = StandardDisconnect; //# sourceMappingURL=disconnect.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXQtc3RhbmRhcmQvZmVhdHVyZXMvbGliL2VzbS9kaXNjb25uZWN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEseUJBQXlCLEdBQ2xCLE1BQU1BLHFCQUFxQixzQkFBc0I7QUFDeEQ7Ozs7Q0FJQyxHQUNNLE1BQU1DLGFBQWFELG1CQUFtQixDQUM3QyxzQ0FBc0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXQtc3RhbmRhcmQvZmVhdHVyZXMvbGliL2VzbS9kaXNjb25uZWN0LmpzP2E0MGQiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqIE5hbWUgb2YgdGhlIGZlYXR1cmUuICovXG5leHBvcnQgY29uc3QgU3RhbmRhcmREaXNjb25uZWN0ID0gJ3N0YW5kYXJkOmRpc2Nvbm5lY3QnO1xuLyoqXG4gKiBAZGVwcmVjYXRlZCBVc2Uge0BsaW5rIFN0YW5kYXJkRGlzY29ubmVjdH0gaW5zdGVhZC5cbiAqXG4gKiBAZ3JvdXAgRGVwcmVjYXRlZFxuICovXG5leHBvcnQgY29uc3QgRGlzY29ubmVjdCA9IFN0YW5kYXJkRGlzY29ubmVjdDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRpc2Nvbm5lY3QuanMubWFwIl0sIm5hbWVzIjpbIlN0YW5kYXJkRGlzY29ubmVjdCIsIkRpc2Nvbm5lY3QiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@wallet-standard/features/lib/esm/disconnect.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@wallet-standard/features/lib/esm/events.js":
/*!*******************************************************************!*\
  !*** ../node_modules/@wallet-standard/features/lib/esm/events.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Events: () => (/* binding */ Events),\n/* harmony export */   StandardEvents: () => (/* binding */ StandardEvents)\n/* harmony export */ });\n/** Name of the feature. */ const StandardEvents = \"standard:events\";\n/**\n * @deprecated Use {@link StandardEvents} instead.\n *\n * @group Deprecated\n */ const Events = StandardEvents; //# sourceMappingURL=events.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXQtc3RhbmRhcmQvZmVhdHVyZXMvbGliL2VzbS9ldmVudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSx5QkFBeUIsR0FDbEIsTUFBTUEsaUJBQWlCLGtCQUFrQjtBQUNoRDs7OztDQUlDLEdBQ00sTUFBTUMsU0FBU0QsZUFBZSxDQUNyQyxrQ0FBa0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXQtc3RhbmRhcmQvZmVhdHVyZXMvbGliL2VzbS9ldmVudHMuanM/ZDc1ZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiogTmFtZSBvZiB0aGUgZmVhdHVyZS4gKi9cbmV4cG9ydCBjb25zdCBTdGFuZGFyZEV2ZW50cyA9ICdzdGFuZGFyZDpldmVudHMnO1xuLyoqXG4gKiBAZGVwcmVjYXRlZCBVc2Uge0BsaW5rIFN0YW5kYXJkRXZlbnRzfSBpbnN0ZWFkLlxuICpcbiAqIEBncm91cCBEZXByZWNhdGVkXG4gKi9cbmV4cG9ydCBjb25zdCBFdmVudHMgPSBTdGFuZGFyZEV2ZW50cztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWV2ZW50cy5qcy5tYXAiXSwibmFtZXMiOlsiU3RhbmRhcmRFdmVudHMiLCJFdmVudHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@wallet-standard/features/lib/esm/events.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@wallet-standard/wallet/lib/esm/register.js":
/*!*******************************************************************!*\
  !*** ../node_modules/@wallet-standard/wallet/lib/esm/register.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEPRECATED_registerWallet: () => (/* binding */ DEPRECATED_registerWallet),\n/* harmony export */   registerWallet: () => (/* binding */ registerWallet)\n/* harmony export */ });\nvar __classPrivateFieldSet = undefined && undefined.__classPrivateFieldSet || function(receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __classPrivateFieldGet = undefined && undefined.__classPrivateFieldGet || function(receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _RegisterWalletEvent_detail;\n/**\n * Register a {@link \"@wallet-standard/base\".Wallet} as a Standard Wallet with the app.\n *\n * This dispatches a {@link \"@wallet-standard/base\".WindowRegisterWalletEvent} to notify the app that the Wallet is\n * ready to be registered.\n *\n * This also adds a listener for {@link \"@wallet-standard/base\".WindowAppReadyEvent} to listen for a notification from\n * the app that the app is ready to register the Wallet.\n *\n * This combination of event dispatch and listener guarantees that the Wallet will be registered synchronously as soon\n * as the app is ready whether the Wallet loads before or after the app.\n *\n * @param wallet Wallet to register.\n *\n * @group Wallet\n */ function registerWallet(wallet) {\n    const callback = ({ register })=>register(wallet);\n    try {\n        window.dispatchEvent(new RegisterWalletEvent(callback));\n    } catch (error) {\n        console.error(\"wallet-standard:register-wallet event could not be dispatched\\n\", error);\n    }\n    try {\n        window.addEventListener(\"wallet-standard:app-ready\", ({ detail: api })=>callback(api));\n    } catch (error) {\n        console.error(\"wallet-standard:app-ready event listener could not be added\\n\", error);\n    }\n}\nclass RegisterWalletEvent extends Event {\n    constructor(callback){\n        super(\"wallet-standard:register-wallet\", {\n            bubbles: false,\n            cancelable: false,\n            composed: false\n        });\n        _RegisterWalletEvent_detail.set(this, void 0);\n        __classPrivateFieldSet(this, _RegisterWalletEvent_detail, callback, \"f\");\n    }\n    get detail() {\n        return __classPrivateFieldGet(this, _RegisterWalletEvent_detail, \"f\");\n    }\n    get type() {\n        return \"wallet-standard:register-wallet\";\n    }\n    /** @deprecated */ preventDefault() {\n        throw new Error(\"preventDefault cannot be called\");\n    }\n    /** @deprecated */ stopImmediatePropagation() {\n        throw new Error(\"stopImmediatePropagation cannot be called\");\n    }\n    /** @deprecated */ stopPropagation() {\n        throw new Error(\"stopPropagation cannot be called\");\n    }\n}\n_RegisterWalletEvent_detail = new WeakMap();\n/**\n * @deprecated Use {@link registerWallet} instead.\n *\n * @group Deprecated\n */ function DEPRECATED_registerWallet(wallet) {\n    var _a;\n    registerWallet(wallet);\n    try {\n        ((_a = window.navigator).wallets || (_a.wallets = [])).push(({ register })=>register(wallet));\n    } catch (error) {\n        console.error(\"window.navigator.wallets could not be pushed\\n\", error);\n    }\n} //# sourceMappingURL=register.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@wallet-standard/wallet/lib/esm/register.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@wallet-standard/wallet/lib/esm/util.js":
/*!***************************************************************!*\
  !*** ../node_modules/@wallet-standard/wallet/lib/esm/util.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ReadonlyWalletAccount: () => (/* binding */ ReadonlyWalletAccount),\n/* harmony export */   arraysEqual: () => (/* binding */ arraysEqual),\n/* harmony export */   bytesEqual: () => (/* binding */ bytesEqual),\n/* harmony export */   concatBytes: () => (/* binding */ concatBytes),\n/* harmony export */   guard: () => (/* binding */ guard),\n/* harmony export */   pick: () => (/* binding */ pick)\n/* harmony export */ });\nvar __classPrivateFieldSet = undefined && undefined.__classPrivateFieldSet || function(receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __classPrivateFieldGet = undefined && undefined.__classPrivateFieldGet || function(receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _ReadonlyWalletAccount_address, _ReadonlyWalletAccount_publicKey, _ReadonlyWalletAccount_chains, _ReadonlyWalletAccount_features, _ReadonlyWalletAccount_label, _ReadonlyWalletAccount_icon;\n/**\n * Base implementation of a {@link \"@wallet-standard/base\".WalletAccount} to be used or extended by a\n * {@link \"@wallet-standard/base\".Wallet}.\n *\n * `WalletAccount` properties must be read-only. This class enforces this by making all properties\n * [truly private](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes/Private_class_fields) and\n * read-only, using getters for access, returning copies instead of references, and calling\n * [Object.freeze](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze)\n * on the instance.\n *\n * @group Account\n */ class ReadonlyWalletAccount {\n    /**\n     * Create and freeze a read-only account.\n     *\n     * @param account Account to copy properties from.\n     */ constructor(account){\n        _ReadonlyWalletAccount_address.set(this, void 0);\n        _ReadonlyWalletAccount_publicKey.set(this, void 0);\n        _ReadonlyWalletAccount_chains.set(this, void 0);\n        _ReadonlyWalletAccount_features.set(this, void 0);\n        _ReadonlyWalletAccount_label.set(this, void 0);\n        _ReadonlyWalletAccount_icon.set(this, void 0);\n        if (new.target === ReadonlyWalletAccount) {\n            Object.freeze(this);\n        }\n        __classPrivateFieldSet(this, _ReadonlyWalletAccount_address, account.address, \"f\");\n        __classPrivateFieldSet(this, _ReadonlyWalletAccount_publicKey, account.publicKey.slice(), \"f\");\n        __classPrivateFieldSet(this, _ReadonlyWalletAccount_chains, account.chains.slice(), \"f\");\n        __classPrivateFieldSet(this, _ReadonlyWalletAccount_features, account.features.slice(), \"f\");\n        __classPrivateFieldSet(this, _ReadonlyWalletAccount_label, account.label, \"f\");\n        __classPrivateFieldSet(this, _ReadonlyWalletAccount_icon, account.icon, \"f\");\n    }\n    /** Implementation of {@link \"@wallet-standard/base\".WalletAccount.address | WalletAccount::address} */ get address() {\n        return __classPrivateFieldGet(this, _ReadonlyWalletAccount_address, \"f\");\n    }\n    /** Implementation of {@link \"@wallet-standard/base\".WalletAccount.publicKey | WalletAccount::publicKey} */ get publicKey() {\n        return __classPrivateFieldGet(this, _ReadonlyWalletAccount_publicKey, \"f\").slice();\n    }\n    /** Implementation of {@link \"@wallet-standard/base\".WalletAccount.chains | WalletAccount::chains} */ get chains() {\n        return __classPrivateFieldGet(this, _ReadonlyWalletAccount_chains, \"f\").slice();\n    }\n    /** Implementation of {@link \"@wallet-standard/base\".WalletAccount.features | WalletAccount::features} */ get features() {\n        return __classPrivateFieldGet(this, _ReadonlyWalletAccount_features, \"f\").slice();\n    }\n    /** Implementation of {@link \"@wallet-standard/base\".WalletAccount.label | WalletAccount::label} */ get label() {\n        return __classPrivateFieldGet(this, _ReadonlyWalletAccount_label, \"f\");\n    }\n    /** Implementation of {@link \"@wallet-standard/base\".WalletAccount.icon | WalletAccount::icon} */ get icon() {\n        return __classPrivateFieldGet(this, _ReadonlyWalletAccount_icon, \"f\");\n    }\n}\n_ReadonlyWalletAccount_address = new WeakMap(), _ReadonlyWalletAccount_publicKey = new WeakMap(), _ReadonlyWalletAccount_chains = new WeakMap(), _ReadonlyWalletAccount_features = new WeakMap(), _ReadonlyWalletAccount_label = new WeakMap(), _ReadonlyWalletAccount_icon = new WeakMap();\n/**\n * Efficiently compare {@link Indexed} arrays (e.g. `Array` and `Uint8Array`).\n *\n * @param a An array.\n * @param b Another array.\n *\n * @return `true` if the arrays have the same length and elements, `false` otherwise.\n *\n * @group Util\n */ function arraysEqual(a, b) {\n    if (a === b) return true;\n    const length = a.length;\n    if (length !== b.length) return false;\n    for(let i = 0; i < length; i++){\n        if (a[i] !== b[i]) return false;\n    }\n    return true;\n}\n/**\n * Efficiently compare byte arrays, using {@link arraysEqual}.\n *\n * @param a A byte array.\n * @param b Another byte array.\n *\n * @return `true` if the byte arrays have the same length and bytes, `false` otherwise.\n *\n * @group Util\n */ function bytesEqual(a, b) {\n    return arraysEqual(a, b);\n}\n/**\n * Efficiently concatenate byte arrays without modifying them.\n *\n * @param first  A byte array.\n * @param others Additional byte arrays.\n *\n * @return New byte array containing the concatenation of all the byte arrays.\n *\n * @group Util\n */ function concatBytes(first, ...others) {\n    const length = others.reduce((length, bytes)=>length + bytes.length, first.length);\n    const bytes = new Uint8Array(length);\n    bytes.set(first, 0);\n    for (const other of others){\n        bytes.set(other, bytes.length);\n    }\n    return bytes;\n}\n/**\n * Create a new object with a subset of fields from a source object.\n *\n * @param source Object to pick fields from.\n * @param keys   Names of fields to pick.\n *\n * @return New object with only the picked fields.\n *\n * @group Util\n */ function pick(source, ...keys) {\n    const picked = {};\n    for (const key of keys){\n        picked[key] = source[key];\n    }\n    return picked;\n}\n/**\n * Call a callback function, catch an error if it throws, and log the error without rethrowing.\n *\n * @param callback Function to call.\n *\n * @group Util\n */ function guard(callback) {\n    try {\n        callback();\n    } catch (error) {\n        console.error(error);\n    }\n} //# sourceMappingURL=util.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@wallet-standard/wallet/lib/esm/util.js\n");

/***/ })

};
;