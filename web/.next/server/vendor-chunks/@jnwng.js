"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@jnwng";
exports.ids = ["vendor-chunks/@jnwng"];
exports.modules = {

/***/ "(ssr)/../node_modules/@jnwng/walletconnect-solana/lib/esm/adapter.js":
/*!**********************************************************************!*\
  !*** ../node_modules/@jnwng/walletconnect-solana/lib/esm/adapter.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WalletConnectChainID: () => (/* binding */ WalletConnectChainID),\n/* harmony export */   WalletConnectRPCMethods: () => (/* binding */ WalletConnectRPCMethods),\n/* harmony export */   WalletConnectWallet: () => (/* binding */ WalletConnectWallet)\n/* harmony export */ });\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/web3.js */ \"(ssr)/../node_modules/@solana/web3.js/lib/index.esm.js\");\n/* harmony import */ var _walletconnect_qrcode_modal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @walletconnect/qrcode-modal */ \"(ssr)/../node_modules/@walletconnect/qrcode-modal/dist/cjs/index.js\");\n/* harmony import */ var _walletconnect_sign_client__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @walletconnect/sign-client */ \"(ssr)/../node_modules/@walletconnect/sign-client/dist/index.es.js\");\n/* harmony import */ var _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @walletconnect/utils */ \"(ssr)/../node_modules/@walletconnect/utils/dist/index.es.js\");\n/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! bs58 */ \"(ssr)/../node_modules/bs58/index.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./errors.js */ \"(ssr)/../node_modules/@jnwng/walletconnect-solana/lib/esm/errors.js\");\n\n\n\n\n\n\nvar WalletConnectChainID;\n(function(WalletConnectChainID) {\n    WalletConnectChainID[\"Mainnet\"] = \"solana:4sGjMW1sUnHzSxGspuhpqLDx6wiyjNtZ\";\n    WalletConnectChainID[\"Devnet\"] = \"solana:8E9rvCKLFQia2Y35HXjjpWzj8weVo44K\";\n})(WalletConnectChainID || (WalletConnectChainID = {}));\nvar WalletConnectRPCMethods;\n(function(WalletConnectRPCMethods) {\n    WalletConnectRPCMethods[\"signTransaction\"] = \"solana_signTransaction\";\n    WalletConnectRPCMethods[\"signMessage\"] = \"solana_signMessage\";\n})(WalletConnectRPCMethods || (WalletConnectRPCMethods = {}));\nconst getConnectParams = (chainId)=>({\n        requiredNamespaces: {\n            solana: {\n                chains: [\n                    chainId\n                ],\n                methods: [\n                    WalletConnectRPCMethods.signTransaction,\n                    WalletConnectRPCMethods.signMessage\n                ],\n                events: []\n            }\n        }\n    });\nconst isVersionedTransaction = (transaction)=>\"version\" in transaction;\nclass WalletConnectWallet {\n    constructor(config){\n        this._options = config.options;\n        this._network = config.network;\n    }\n    async connect() {\n        const client = this._client ?? await _walletconnect_sign_client__WEBPACK_IMPORTED_MODULE_3__[\"default\"].init(this._options);\n        const sessions = client.find(getConnectParams(this._network)).filter((s)=>s.acknowledged);\n        if (sessions.length) {\n            // select last matching session\n            this._session = sessions[sessions.length - 1];\n            // We assign this variable only after we're sure we've received approval\n            this._client = client;\n            return {\n                publicKey: this.publicKey\n            };\n        } else {\n            const { uri, approval } = await client.connect(getConnectParams(this._network));\n            return new Promise((resolve, reject)=>{\n                if (uri) {\n                    _walletconnect_qrcode_modal__WEBPACK_IMPORTED_MODULE_1__.open(uri, ()=>{\n                        reject(new _errors_js__WEBPACK_IMPORTED_MODULE_4__.QRCodeModalError());\n                    });\n                }\n                approval().then((session)=>{\n                    this._session = session;\n                    // We assign this variable only after we're sure we've received approval\n                    this._client = client;\n                    resolve({\n                        publicKey: this.publicKey\n                    });\n                }).catch(reject).finally(()=>{\n                    _walletconnect_qrcode_modal__WEBPACK_IMPORTED_MODULE_1__.close();\n                });\n            });\n        }\n    }\n    async disconnect() {\n        if (this._client && this._session) {\n            await this._client.disconnect({\n                topic: this._session.topic,\n                reason: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"USER_DISCONNECTED\")\n            });\n            this._session = undefined;\n        } else {\n            throw new _errors_js__WEBPACK_IMPORTED_MODULE_4__.ClientNotInitializedError();\n        }\n    }\n    get client() {\n        if (this._client) {\n            // TODO: using client.off throws an error\n            return Object.assign({}, this._client, {\n                off: this._client.removeListener\n            });\n        // return this._client;\n        } else {\n            throw new _errors_js__WEBPACK_IMPORTED_MODULE_4__.ClientNotInitializedError();\n        }\n    }\n    get publicKey() {\n        if (this._client && this._session) {\n            const { address } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.parseAccountId)(this._session.namespaces.solana.accounts[0]);\n            return new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.PublicKey(address);\n        } else {\n            throw new _errors_js__WEBPACK_IMPORTED_MODULE_4__.ClientNotInitializedError();\n        }\n    }\n    async signTransaction(transaction) {\n        if (this._client && this._session) {\n            let rawTransaction;\n            let legacyTransaction;\n            if (isVersionedTransaction(transaction)) {\n                // V0 transactions are serialized and passed in the `transaction` property\n                rawTransaction = Buffer.from(transaction.serialize()).toString(\"base64\");\n                if (transaction.version === \"legacy\") {\n                    // For backwards-compatible, legacy transactions are spread in the params\n                    legacyTransaction = _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.Transaction.from(transaction.serialize());\n                }\n            } else {\n                rawTransaction = transaction.serialize({\n                    requireAllSignatures: false,\n                    verifySignatures: false\n                }).toString(\"base64\");\n                legacyTransaction = transaction;\n            }\n            const { signature } = await this._client.request({\n                chainId: this._network,\n                topic: this._session.topic,\n                request: {\n                    method: WalletConnectRPCMethods.signTransaction,\n                    params: {\n                        // Passing ...legacyTransaction is deprecated.\n                        // All new clients should rely on the `transaction` parameter.\n                        // The future versions will stop passing ...legacyTransaction.\n                        ...legacyTransaction,\n                        // New base64-encoded serialized transaction request parameter\n                        transaction: rawTransaction\n                    }\n                }\n            });\n            transaction.addSignature(this.publicKey, Buffer.from(bs58__WEBPACK_IMPORTED_MODULE_2__.decode(signature)));\n            return transaction;\n        } else {\n            throw new _errors_js__WEBPACK_IMPORTED_MODULE_4__.ClientNotInitializedError();\n        }\n    }\n    async signMessage(message) {\n        if (this._client && this._session) {\n            const { signature } = await this._client.request({\n                // The network does not change the output of message signing, but this is a required parameter for SignClient\n                chainId: this._network,\n                topic: this._session.topic,\n                request: {\n                    method: WalletConnectRPCMethods.signMessage,\n                    params: {\n                        pubkey: this.publicKey.toString(),\n                        message: bs58__WEBPACK_IMPORTED_MODULE_2__.encode(message)\n                    }\n                }\n            });\n            return bs58__WEBPACK_IMPORTED_MODULE_2__.decode(signature);\n        } else {\n            throw new _errors_js__WEBPACK_IMPORTED_MODULE_4__.ClientNotInitializedError();\n        }\n    }\n} //# sourceMappingURL=adapter.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@jnwng/walletconnect-solana/lib/esm/adapter.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@jnwng/walletconnect-solana/lib/esm/errors.js":
/*!*********************************************************************!*\
  !*** ../node_modules/@jnwng/walletconnect-solana/lib/esm/errors.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ClientNotInitializedError: () => (/* binding */ ClientNotInitializedError),\n/* harmony export */   QRCodeModalError: () => (/* binding */ QRCodeModalError)\n/* harmony export */ });\n// Taken from https://stackoverflow.com/a/41429145/2247097\nclass ClientNotInitializedError extends Error {\n    constructor(){\n        super();\n        // Set the prototype explicitly.\n        Object.setPrototypeOf(this, ClientNotInitializedError.prototype);\n    }\n}\nclass QRCodeModalError extends Error {\n    constructor(){\n        super();\n        // Set the prototype explicitly.\n        Object.setPrototypeOf(this, QRCodeModalError.prototype);\n    }\n} //# sourceMappingURL=errors.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BqbnduZy93YWxsZXRjb25uZWN0LXNvbGFuYS9saWIvZXNtL2Vycm9ycy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLDBEQUEwRDtBQUNuRCxNQUFNQSxrQ0FBa0NDO0lBQzNDQyxhQUFjO1FBQ1YsS0FBSztRQUNMLGdDQUFnQztRQUNoQ0MsT0FBT0MsY0FBYyxDQUFDLElBQUksRUFBRUosMEJBQTBCSyxTQUFTO0lBQ25FO0FBQ0o7QUFDTyxNQUFNQyx5QkFBeUJMO0lBQ2xDQyxhQUFjO1FBQ1YsS0FBSztRQUNMLGdDQUFnQztRQUNoQ0MsT0FBT0MsY0FBYyxDQUFDLElBQUksRUFBRUUsaUJBQWlCRCxTQUFTO0lBQzFEO0FBQ0osRUFDQSxrQ0FBa0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL0BqbnduZy93YWxsZXRjb25uZWN0LXNvbGFuYS9saWIvZXNtL2Vycm9ycy5qcz8yN2JiIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIFRha2VuIGZyb20gaHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9hLzQxNDI5MTQ1LzIyNDcwOTdcbmV4cG9ydCBjbGFzcyBDbGllbnROb3RJbml0aWFsaXplZEVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlcigpO1xuICAgICAgICAvLyBTZXQgdGhlIHByb3RvdHlwZSBleHBsaWNpdGx5LlxuICAgICAgICBPYmplY3Quc2V0UHJvdG90eXBlT2YodGhpcywgQ2xpZW50Tm90SW5pdGlhbGl6ZWRFcnJvci5wcm90b3R5cGUpO1xuICAgIH1cbn1cbmV4cG9ydCBjbGFzcyBRUkNvZGVNb2RhbEVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlcigpO1xuICAgICAgICAvLyBTZXQgdGhlIHByb3RvdHlwZSBleHBsaWNpdGx5LlxuICAgICAgICBPYmplY3Quc2V0UHJvdG90eXBlT2YodGhpcywgUVJDb2RlTW9kYWxFcnJvci5wcm90b3R5cGUpO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWVycm9ycy5qcy5tYXAiXSwibmFtZXMiOlsiQ2xpZW50Tm90SW5pdGlhbGl6ZWRFcnJvciIsIkVycm9yIiwiY29uc3RydWN0b3IiLCJPYmplY3QiLCJzZXRQcm90b3R5cGVPZiIsInByb3RvdHlwZSIsIlFSQ29kZU1vZGFsRXJyb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@jnwng/walletconnect-solana/lib/esm/errors.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@jnwng/walletconnect-solana/lib/esm/index.js":
/*!********************************************************************!*\
  !*** ../node_modules/@jnwng/walletconnect-solana/lib/esm/index.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ClientNotInitializedError: () => (/* reexport safe */ _errors_js__WEBPACK_IMPORTED_MODULE_1__.ClientNotInitializedError),\n/* harmony export */   QRCodeModalError: () => (/* reexport safe */ _errors_js__WEBPACK_IMPORTED_MODULE_1__.QRCodeModalError),\n/* harmony export */   WalletConnectChainID: () => (/* reexport safe */ _adapter_js__WEBPACK_IMPORTED_MODULE_0__.WalletConnectChainID),\n/* harmony export */   WalletConnectClient: () => (/* reexport safe */ _walletconnect_sign_client__WEBPACK_IMPORTED_MODULE_2__[\"default\"]),\n/* harmony export */   WalletConnectRPCMethods: () => (/* reexport safe */ _adapter_js__WEBPACK_IMPORTED_MODULE_0__.WalletConnectRPCMethods),\n/* harmony export */   WalletConnectWallet: () => (/* reexport safe */ _adapter_js__WEBPACK_IMPORTED_MODULE_0__.WalletConnectWallet)\n/* harmony export */ });\n/* harmony import */ var _adapter_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./adapter.js */ \"(ssr)/../node_modules/@jnwng/walletconnect-solana/lib/esm/adapter.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./errors.js */ \"(ssr)/../node_modules/@jnwng/walletconnect-solana/lib/esm/errors.js\");\n/* harmony import */ var _walletconnect_sign_client__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @walletconnect/sign-client */ \"(ssr)/../node_modules/@walletconnect/sign-client/dist/index.es.js\");\n\n\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BqbnduZy93YWxsZXRjb25uZWN0LXNvbGFuYS9saWIvZXNtL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUE2QjtBQUNEO0FBQ2dELENBQzVFLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvQGpud25nL3dhbGxldGNvbm5lY3Qtc29sYW5hL2xpYi9lc20vaW5kZXguanM/MzA2YyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tICcuL2FkYXB0ZXIuanMnO1xuZXhwb3J0ICogZnJvbSAnLi9lcnJvcnMuanMnO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBXYWxsZXRDb25uZWN0Q2xpZW50IH0gZnJvbSAnQHdhbGxldGNvbm5lY3Qvc2lnbi1jbGllbnQnO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbImRlZmF1bHQiLCJXYWxsZXRDb25uZWN0Q2xpZW50Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@jnwng/walletconnect-solana/lib/esm/index.js\n");

/***/ })

};
;