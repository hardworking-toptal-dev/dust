/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/buffer-fill";
exports.ids = ["vendor-chunks/buffer-fill"];
exports.modules = {

/***/ "(ssr)/../node_modules/buffer-fill/index.js":
/*!********************************************!*\
  !*** ../node_modules/buffer-fill/index.js ***!
  \********************************************/
/***/ ((module) => {

eval("/* Node.js 6.4.0 and up has full support */ var hasFullSupport = function() {\n    try {\n        if (!Buffer.isEncoding(\"latin1\")) {\n            return false;\n        }\n        var buf = Buffer.alloc ? Buffer.alloc(4) : new Buffer(4);\n        buf.fill(\"ab\", \"ucs2\");\n        return buf.toString(\"hex\") === \"61006200\";\n    } catch (_) {\n        return false;\n    }\n}();\nfunction isSingleByte(val) {\n    return val.length === 1 && val.charCodeAt(0) < 256;\n}\nfunction fillWithNumber(buffer, val, start, end) {\n    if (start < 0 || end > buffer.length) {\n        throw new RangeError(\"Out of range index\");\n    }\n    start = start >>> 0;\n    end = end === undefined ? buffer.length : end >>> 0;\n    if (end > start) {\n        buffer.fill(val, start, end);\n    }\n    return buffer;\n}\nfunction fillWithBuffer(buffer, val, start, end) {\n    if (start < 0 || end > buffer.length) {\n        throw new RangeError(\"Out of range index\");\n    }\n    if (end <= start) {\n        return buffer;\n    }\n    start = start >>> 0;\n    end = end === undefined ? buffer.length : end >>> 0;\n    var pos = start;\n    var len = val.length;\n    while(pos <= end - len){\n        val.copy(buffer, pos);\n        pos += len;\n    }\n    if (pos !== end) {\n        val.copy(buffer, pos, 0, end - pos);\n    }\n    return buffer;\n}\nfunction fill(buffer, val, start, end, encoding) {\n    if (hasFullSupport) {\n        return buffer.fill(val, start, end, encoding);\n    }\n    if (typeof val === \"number\") {\n        return fillWithNumber(buffer, val, start, end);\n    }\n    if (typeof val === \"string\") {\n        if (typeof start === \"string\") {\n            encoding = start;\n            start = 0;\n            end = buffer.length;\n        } else if (typeof end === \"string\") {\n            encoding = end;\n            end = buffer.length;\n        }\n        if (encoding !== undefined && typeof encoding !== \"string\") {\n            throw new TypeError(\"encoding must be a string\");\n        }\n        if (encoding === \"latin1\") {\n            encoding = \"binary\";\n        }\n        if (typeof encoding === \"string\" && !Buffer.isEncoding(encoding)) {\n            throw new TypeError(\"Unknown encoding: \" + encoding);\n        }\n        if (val === \"\") {\n            return fillWithNumber(buffer, 0, start, end);\n        }\n        if (isSingleByte(val)) {\n            return fillWithNumber(buffer, val.charCodeAt(0), start, end);\n        }\n        val = new Buffer(val, encoding);\n    }\n    if (Buffer.isBuffer(val)) {\n        return fillWithBuffer(buffer, val, start, end);\n    }\n    // Other values (e.g. undefined, boolean, object) results in zero-fill\n    return fillWithNumber(buffer, 0, start, end);\n}\nmodule.exports = fill;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2J1ZmZlci1maWxsL2luZGV4LmpzP2E4MGUiXSwic291cmNlc0NvbnRlbnQiOlsiLyogTm9kZS5qcyA2LjQuMCBhbmQgdXAgaGFzIGZ1bGwgc3VwcG9ydCAqL1xudmFyIGhhc0Z1bGxTdXBwb3J0ID0gKGZ1bmN0aW9uICgpIHtcbiAgdHJ5IHtcbiAgICBpZiAoIUJ1ZmZlci5pc0VuY29kaW5nKCdsYXRpbjEnKSkge1xuICAgICAgcmV0dXJuIGZhbHNlXG4gICAgfVxuXG4gICAgdmFyIGJ1ZiA9IEJ1ZmZlci5hbGxvYyA/IEJ1ZmZlci5hbGxvYyg0KSA6IG5ldyBCdWZmZXIoNClcblxuICAgIGJ1Zi5maWxsKCdhYicsICd1Y3MyJylcblxuICAgIHJldHVybiAoYnVmLnRvU3RyaW5nKCdoZXgnKSA9PT0gJzYxMDA2MjAwJylcbiAgfSBjYXRjaCAoXykge1xuICAgIHJldHVybiBmYWxzZVxuICB9XG59KCkpXG5cbmZ1bmN0aW9uIGlzU2luZ2xlQnl0ZSAodmFsKSB7XG4gIHJldHVybiAodmFsLmxlbmd0aCA9PT0gMSAmJiB2YWwuY2hhckNvZGVBdCgwKSA8IDI1Nilcbn1cblxuZnVuY3Rpb24gZmlsbFdpdGhOdW1iZXIgKGJ1ZmZlciwgdmFsLCBzdGFydCwgZW5kKSB7XG4gIGlmIChzdGFydCA8IDAgfHwgZW5kID4gYnVmZmVyLmxlbmd0aCkge1xuICAgIHRocm93IG5ldyBSYW5nZUVycm9yKCdPdXQgb2YgcmFuZ2UgaW5kZXgnKVxuICB9XG5cbiAgc3RhcnQgPSBzdGFydCA+Pj4gMFxuICBlbmQgPSBlbmQgPT09IHVuZGVmaW5lZCA/IGJ1ZmZlci5sZW5ndGggOiBlbmQgPj4+IDBcblxuICBpZiAoZW5kID4gc3RhcnQpIHtcbiAgICBidWZmZXIuZmlsbCh2YWwsIHN0YXJ0LCBlbmQpXG4gIH1cblxuICByZXR1cm4gYnVmZmVyXG59XG5cbmZ1bmN0aW9uIGZpbGxXaXRoQnVmZmVyIChidWZmZXIsIHZhbCwgc3RhcnQsIGVuZCkge1xuICBpZiAoc3RhcnQgPCAwIHx8IGVuZCA+IGJ1ZmZlci5sZW5ndGgpIHtcbiAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcignT3V0IG9mIHJhbmdlIGluZGV4JylcbiAgfVxuXG4gIGlmIChlbmQgPD0gc3RhcnQpIHtcbiAgICByZXR1cm4gYnVmZmVyXG4gIH1cblxuICBzdGFydCA9IHN0YXJ0ID4+PiAwXG4gIGVuZCA9IGVuZCA9PT0gdW5kZWZpbmVkID8gYnVmZmVyLmxlbmd0aCA6IGVuZCA+Pj4gMFxuXG4gIHZhciBwb3MgPSBzdGFydFxuICB2YXIgbGVuID0gdmFsLmxlbmd0aFxuICB3aGlsZSAocG9zIDw9IChlbmQgLSBsZW4pKSB7XG4gICAgdmFsLmNvcHkoYnVmZmVyLCBwb3MpXG4gICAgcG9zICs9IGxlblxuICB9XG5cbiAgaWYgKHBvcyAhPT0gZW5kKSB7XG4gICAgdmFsLmNvcHkoYnVmZmVyLCBwb3MsIDAsIGVuZCAtIHBvcylcbiAgfVxuXG4gIHJldHVybiBidWZmZXJcbn1cblxuZnVuY3Rpb24gZmlsbCAoYnVmZmVyLCB2YWwsIHN0YXJ0LCBlbmQsIGVuY29kaW5nKSB7XG4gIGlmIChoYXNGdWxsU3VwcG9ydCkge1xuICAgIHJldHVybiBidWZmZXIuZmlsbCh2YWwsIHN0YXJ0LCBlbmQsIGVuY29kaW5nKVxuICB9XG5cbiAgaWYgKHR5cGVvZiB2YWwgPT09ICdudW1iZXInKSB7XG4gICAgcmV0dXJuIGZpbGxXaXRoTnVtYmVyKGJ1ZmZlciwgdmFsLCBzdGFydCwgZW5kKVxuICB9XG5cbiAgaWYgKHR5cGVvZiB2YWwgPT09ICdzdHJpbmcnKSB7XG4gICAgaWYgKHR5cGVvZiBzdGFydCA9PT0gJ3N0cmluZycpIHtcbiAgICAgIGVuY29kaW5nID0gc3RhcnRcbiAgICAgIHN0YXJ0ID0gMFxuICAgICAgZW5kID0gYnVmZmVyLmxlbmd0aFxuICAgIH0gZWxzZSBpZiAodHlwZW9mIGVuZCA9PT0gJ3N0cmluZycpIHtcbiAgICAgIGVuY29kaW5nID0gZW5kXG4gICAgICBlbmQgPSBidWZmZXIubGVuZ3RoXG4gICAgfVxuXG4gICAgaWYgKGVuY29kaW5nICE9PSB1bmRlZmluZWQgJiYgdHlwZW9mIGVuY29kaW5nICE9PSAnc3RyaW5nJykge1xuICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignZW5jb2RpbmcgbXVzdCBiZSBhIHN0cmluZycpXG4gICAgfVxuXG4gICAgaWYgKGVuY29kaW5nID09PSAnbGF0aW4xJykge1xuICAgICAgZW5jb2RpbmcgPSAnYmluYXJ5J1xuICAgIH1cblxuICAgIGlmICh0eXBlb2YgZW5jb2RpbmcgPT09ICdzdHJpbmcnICYmICFCdWZmZXIuaXNFbmNvZGluZyhlbmNvZGluZykpIHtcbiAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ1Vua25vd24gZW5jb2Rpbmc6ICcgKyBlbmNvZGluZylcbiAgICB9XG5cbiAgICBpZiAodmFsID09PSAnJykge1xuICAgICAgcmV0dXJuIGZpbGxXaXRoTnVtYmVyKGJ1ZmZlciwgMCwgc3RhcnQsIGVuZClcbiAgICB9XG5cbiAgICBpZiAoaXNTaW5nbGVCeXRlKHZhbCkpIHtcbiAgICAgIHJldHVybiBmaWxsV2l0aE51bWJlcihidWZmZXIsIHZhbC5jaGFyQ29kZUF0KDApLCBzdGFydCwgZW5kKVxuICAgIH1cblxuICAgIHZhbCA9IG5ldyBCdWZmZXIodmFsLCBlbmNvZGluZylcbiAgfVxuXG4gIGlmIChCdWZmZXIuaXNCdWZmZXIodmFsKSkge1xuICAgIHJldHVybiBmaWxsV2l0aEJ1ZmZlcihidWZmZXIsIHZhbCwgc3RhcnQsIGVuZClcbiAgfVxuXG4gIC8vIE90aGVyIHZhbHVlcyAoZS5nLiB1bmRlZmluZWQsIGJvb2xlYW4sIG9iamVjdCkgcmVzdWx0cyBpbiB6ZXJvLWZpbGxcbiAgcmV0dXJuIGZpbGxXaXRoTnVtYmVyKGJ1ZmZlciwgMCwgc3RhcnQsIGVuZClcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmaWxsXG4iXSwibmFtZXMiOlsiaGFzRnVsbFN1cHBvcnQiLCJCdWZmZXIiLCJpc0VuY29kaW5nIiwiYnVmIiwiYWxsb2MiLCJmaWxsIiwidG9TdHJpbmciLCJfIiwiaXNTaW5nbGVCeXRlIiwidmFsIiwibGVuZ3RoIiwiY2hhckNvZGVBdCIsImZpbGxXaXRoTnVtYmVyIiwiYnVmZmVyIiwic3RhcnQiLCJlbmQiLCJSYW5nZUVycm9yIiwidW5kZWZpbmVkIiwiZmlsbFdpdGhCdWZmZXIiLCJwb3MiLCJsZW4iLCJjb3B5IiwiZW5jb2RpbmciLCJUeXBlRXJyb3IiLCJpc0J1ZmZlciIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLHlDQUF5QyxHQUN6QyxJQUFJQSxpQkFBa0I7SUFDcEIsSUFBSTtRQUNGLElBQUksQ0FBQ0MsT0FBT0MsVUFBVSxDQUFDLFdBQVc7WUFDaEMsT0FBTztRQUNUO1FBRUEsSUFBSUMsTUFBTUYsT0FBT0csS0FBSyxHQUFHSCxPQUFPRyxLQUFLLENBQUMsS0FBSyxJQUFJSCxPQUFPO1FBRXRERSxJQUFJRSxJQUFJLENBQUMsTUFBTTtRQUVmLE9BQVFGLElBQUlHLFFBQVEsQ0FBQyxXQUFXO0lBQ2xDLEVBQUUsT0FBT0MsR0FBRztRQUNWLE9BQU87SUFDVDtBQUNGO0FBRUEsU0FBU0MsYUFBY0MsR0FBRztJQUN4QixPQUFRQSxJQUFJQyxNQUFNLEtBQUssS0FBS0QsSUFBSUUsVUFBVSxDQUFDLEtBQUs7QUFDbEQ7QUFFQSxTQUFTQyxlQUFnQkMsTUFBTSxFQUFFSixHQUFHLEVBQUVLLEtBQUssRUFBRUMsR0FBRztJQUM5QyxJQUFJRCxRQUFRLEtBQUtDLE1BQU1GLE9BQU9ILE1BQU0sRUFBRTtRQUNwQyxNQUFNLElBQUlNLFdBQVc7SUFDdkI7SUFFQUYsUUFBUUEsVUFBVTtJQUNsQkMsTUFBTUEsUUFBUUUsWUFBWUosT0FBT0gsTUFBTSxHQUFHSyxRQUFRO0lBRWxELElBQUlBLE1BQU1ELE9BQU87UUFDZkQsT0FBT1IsSUFBSSxDQUFDSSxLQUFLSyxPQUFPQztJQUMxQjtJQUVBLE9BQU9GO0FBQ1Q7QUFFQSxTQUFTSyxlQUFnQkwsTUFBTSxFQUFFSixHQUFHLEVBQUVLLEtBQUssRUFBRUMsR0FBRztJQUM5QyxJQUFJRCxRQUFRLEtBQUtDLE1BQU1GLE9BQU9ILE1BQU0sRUFBRTtRQUNwQyxNQUFNLElBQUlNLFdBQVc7SUFDdkI7SUFFQSxJQUFJRCxPQUFPRCxPQUFPO1FBQ2hCLE9BQU9EO0lBQ1Q7SUFFQUMsUUFBUUEsVUFBVTtJQUNsQkMsTUFBTUEsUUFBUUUsWUFBWUosT0FBT0gsTUFBTSxHQUFHSyxRQUFRO0lBRWxELElBQUlJLE1BQU1MO0lBQ1YsSUFBSU0sTUFBTVgsSUFBSUMsTUFBTTtJQUNwQixNQUFPUyxPQUFRSixNQUFNSyxJQUFNO1FBQ3pCWCxJQUFJWSxJQUFJLENBQUNSLFFBQVFNO1FBQ2pCQSxPQUFPQztJQUNUO0lBRUEsSUFBSUQsUUFBUUosS0FBSztRQUNmTixJQUFJWSxJQUFJLENBQUNSLFFBQVFNLEtBQUssR0FBR0osTUFBTUk7SUFDakM7SUFFQSxPQUFPTjtBQUNUO0FBRUEsU0FBU1IsS0FBTVEsTUFBTSxFQUFFSixHQUFHLEVBQUVLLEtBQUssRUFBRUMsR0FBRyxFQUFFTyxRQUFRO0lBQzlDLElBQUl0QixnQkFBZ0I7UUFDbEIsT0FBT2EsT0FBT1IsSUFBSSxDQUFDSSxLQUFLSyxPQUFPQyxLQUFLTztJQUN0QztJQUVBLElBQUksT0FBT2IsUUFBUSxVQUFVO1FBQzNCLE9BQU9HLGVBQWVDLFFBQVFKLEtBQUtLLE9BQU9DO0lBQzVDO0lBRUEsSUFBSSxPQUFPTixRQUFRLFVBQVU7UUFDM0IsSUFBSSxPQUFPSyxVQUFVLFVBQVU7WUFDN0JRLFdBQVdSO1lBQ1hBLFFBQVE7WUFDUkMsTUFBTUYsT0FBT0gsTUFBTTtRQUNyQixPQUFPLElBQUksT0FBT0ssUUFBUSxVQUFVO1lBQ2xDTyxXQUFXUDtZQUNYQSxNQUFNRixPQUFPSCxNQUFNO1FBQ3JCO1FBRUEsSUFBSVksYUFBYUwsYUFBYSxPQUFPSyxhQUFhLFVBQVU7WUFDMUQsTUFBTSxJQUFJQyxVQUFVO1FBQ3RCO1FBRUEsSUFBSUQsYUFBYSxVQUFVO1lBQ3pCQSxXQUFXO1FBQ2I7UUFFQSxJQUFJLE9BQU9BLGFBQWEsWUFBWSxDQUFDckIsT0FBT0MsVUFBVSxDQUFDb0IsV0FBVztZQUNoRSxNQUFNLElBQUlDLFVBQVUsdUJBQXVCRDtRQUM3QztRQUVBLElBQUliLFFBQVEsSUFBSTtZQUNkLE9BQU9HLGVBQWVDLFFBQVEsR0FBR0MsT0FBT0M7UUFDMUM7UUFFQSxJQUFJUCxhQUFhQyxNQUFNO1lBQ3JCLE9BQU9HLGVBQWVDLFFBQVFKLElBQUlFLFVBQVUsQ0FBQyxJQUFJRyxPQUFPQztRQUMxRDtRQUVBTixNQUFNLElBQUlSLE9BQU9RLEtBQUthO0lBQ3hCO0lBRUEsSUFBSXJCLE9BQU91QixRQUFRLENBQUNmLE1BQU07UUFDeEIsT0FBT1MsZUFBZUwsUUFBUUosS0FBS0ssT0FBT0M7SUFDNUM7SUFFQSxzRUFBc0U7SUFDdEUsT0FBT0gsZUFBZUMsUUFBUSxHQUFHQyxPQUFPQztBQUMxQztBQUVBVSxPQUFPQyxPQUFPLEdBQUdyQiIsImZpbGUiOiIoc3NyKS8uLi9ub2RlX21vZHVsZXMvYnVmZmVyLWZpbGwvaW5kZXguanMiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/buffer-fill/index.js\n");

/***/ })

};
;